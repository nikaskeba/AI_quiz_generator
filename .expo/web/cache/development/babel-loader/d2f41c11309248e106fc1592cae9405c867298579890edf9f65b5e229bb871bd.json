{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dictionary from \"./Dictionary\";\nimport QuizComponent from \"./QuizComponent\";\nimport Navbar from \"./Navbar\";\nimport Saved from \"./Saved\";\nimport Content from \"./Content\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loginMessage = _useState4[0],\n    setLoginMessage = _useState4[1];\n  var Stack = createStackNavigator();\n  var _useState5 = useState(\"home\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activePage = _useState6[0],\n    setActivePage = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    username = _useState8[0],\n    setUsername = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    password = _useState10[0],\n    setPassword = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isLoggedIn = _useState12[0],\n    setIsLoggedIn = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    registerUsername = _useState14[0],\n    setRegisterUsername = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    registerPassword = _useState16[0],\n    setRegisterPassword = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    registerEmail = _useState18[0],\n    setRegisterEmail = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    email = _useState20[0],\n    setEmail = _useState20[1];\n  var handleRegister = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var formData = new URLSearchParams();\n        formData.append('username', registerUsername);\n        formData.append('password', registerPassword);\n        formData.append('email', registerEmail);\n        var response = yield fetch('https://skeba.info/applogin/register.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        var json = yield response.json();\n        if (json.success) {\n          setMessage('Registration Successful! You can now log in.');\n          setRegisterUsername('');\n          setRegisterPassword('');\n          setRegisterEmail('');\n        } else {\n          setMessage('Registration Failed: ' + json.message);\n        }\n      } catch (error) {\n        console.error('Registration error:', error);\n        setMessage('An unexpected error occurred.');\n      }\n    });\n    return function handleRegister() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var logout = function logout() {\n    setIsLoggedIn(false);\n    setEmail('');\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var formData = new URLSearchParams();\n        formData.append('email', email);\n        formData.append('password', password);\n        console.log(email, password);\n        var response = yield fetch('https://skeba.info/applogin/login.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        console.log(\"Raw Response:\", response);\n        var json = yield response.json();\n        console.log(json);\n        if (json.success) {\n          setIsLoggedIn(true);\n          setEmail(json.email);\n          setLoginMessage('Login Successful!');\n        } else {\n          setLoginMessage('Login Failed: ' + json.message);\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        setLoginMessage('An unexpected error occurred during login.');\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: isLoggedIn ? _jsxs(View, {\n      style: styles.loggedInContainer,\n      children: [_jsx(Button, {\n        title: \"Log out\",\n        onPress: function onPress() {\n          return setIsLoggedIn(false);\n        }\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Navbar, {\n          isUserLoggedIn: !!name,\n          setActivePage: setActivePage\n        }), activePage === \"home\" && _jsx(Content, {\n          name: name,\n          email: email,\n          setActivePage: setActivePage\n        }), activePage === \"dictionary\" && _jsx(Dictionary, {\n          word: selectedWord\n        }), activePage === \"saved\" && _jsx(Saved, {\n          name: name,\n          email: email,\n          onSelectWord: setSelectedWord\n        }), activePage === \"quiz\" && _jsx(QuizComponent, {\n          name: name,\n          email: email\n        }), _jsx(Button, {\n          title: \"Log out\",\n          onPress: logout\n        })]\n      })]\n    }) : _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(Image, {\n        source: require(\"./data/spanishquiz.png\"),\n        style: styles.image\n      }), _jsx(Text, {\n        style: styles.header,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), _jsx(Button, {\n        title: \"Login\",\n        onPress: handleLogin\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: loginMessage\n      }), \"  \", _jsx(Text, {\n        style: [styles.header, styles.marginTop],\n        children: \"Register\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Register Email\",\n        value: registerEmail,\n        onChangeText: setRegisterEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Register Password\",\n        value: registerPassword,\n        onChangeText: setRegisterPassword,\n        secureTextEntry: true\n      }), _jsx(Button, {\n        title: \"Register\",\n        onPress: handleRegister\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: message\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f4f4f4\",\n    padding: 20\n  },\n  messageText: {\n    textAlign: 'center',\n    color: '#FF0000',\n    marginBottom: 15\n  },\n  image: {\n    width: 300,\n    height: 200,\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    marginBottom: 40\n  },\n  loggedInContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  input: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    marginBottom: 15,\n    backgroundColor: '#fff'\n  },\n  marginTop: {\n    marginTop: 40\n  }\n});","map":{"version":3,"names":["AuthSession","jwtDecode","useEffect","useState","Alert","Button","StyleSheet","Text","View","Image","TextInput","Dictionary","QuizComponent","Navbar","Saved","Content","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","loginMessage","setLoginMessage","Stack","_useState5","_useState6","activePage","setActivePage","_useState7","_useState8","username","setUsername","_useState9","_useState10","password","setPassword","_useState11","_useState12","isLoggedIn","setIsLoggedIn","_useState13","_useState14","registerUsername","setRegisterUsername","_useState15","_useState16","registerPassword","setRegisterPassword","_useState17","_useState18","registerEmail","setRegisterEmail","_useState19","_useState20","email","setEmail","handleRegister","_ref","_asyncToGenerator","formData","URLSearchParams","append","response","fetch","method","headers","body","toString","json","success","error","console","apply","arguments","logout","handleLogin","_ref2","log","style","styles","container","children","loggedInContainer","title","onPress","isUserLoggedIn","name","word","selectedWord","onSelectWord","setSelectedWord","formContainer","source","require","image","header","input","placeholder","value","onChangeText","secureTextEntry","messageText","marginTop","create","flex","backgroundColor","padding","textAlign","color","marginBottom","width","height","resizeMode","alignSelf","justifyContent","alignItems","borderWidth","borderColor","borderRadius"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/App.js"],"sourcesContent":["//app.js\nimport * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { Alert, Button, StyleSheet, Text, View, Image, TextInput } from 'react-native';\nimport Dictionary from './Dictionary';  // Import the Dictionary component\nimport QuizComponent from './QuizComponent';  // Import the Dictionary component\n\nimport Navbar from './Navbar';\nimport Saved from './Saved';\nimport Content from './Content';  // Import the Content component\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nexport default function App() {\n    const [message, setMessage] = useState('');\nconst [loginMessage, setLoginMessage] = useState('');\nconst Stack = createStackNavigator();\nconst [activePage, setActivePage] = useState(\"home\");\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\nconst [registerUsername, setRegisterUsername] = useState('');\nconst [registerPassword, setRegisterPassword] = useState('');\nconst [registerEmail, setRegisterEmail] = useState('');\nconst [email, setEmail] = useState('');\n\nconst handleRegister = async () => {\n    try {\n        let formData = new URLSearchParams();\n        formData.append('username', registerUsername);\n        formData.append('password', registerPassword);\n        formData.append('email', registerEmail);\n\n        let response = await fetch('https://skeba.info/applogin/register.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData.toString(),\n        });\n\n        let json = await response.json();\n        if (json.success) {\n            setMessage('Registration Successful! You can now log in.');\n            // Clear the registration fields\n            setRegisterUsername('');\n            setRegisterPassword('');\n            setRegisterEmail('');\n        } else {\n            setMessage('Registration Failed: ' + json.message);\n        }\n    } catch (error) {\n        console.error('Registration error:', error);\n        setMessage('An unexpected error occurred.');\n    }\n};\nconst logout = () => {\n    setIsLoggedIn(false);\n    setEmail('');  // Clear the email\n};\n\nconst handleLogin = async () => {\n    try {\n        let formData = new URLSearchParams();\n        formData.append('email', email);\n        formData.append('password', password);\nconsole.log(email, password);\n\n       let response = await fetch('https://skeba.info/applogin/login.php', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData.toString(),\n});\nconsole.log(\"Raw Response:\", response);\nlet json = await response.json();\nconsole.log(json);\n        if (json.success) {\n            setIsLoggedIn(true);\n            setEmail(json.email);  // Set the email\n            setLoginMessage('Login Successful!');\n        } else {\n            setLoginMessage('Login Failed: ' + json.message);\n        }\n    } catch (error) {\n        console.error('Login error:', error);\n        setLoginMessage('An unexpected error occurred during login.');\n    }\n};\n\n  return (\n        <View style={styles.container}>\n            {isLoggedIn ? (\n                <View style={styles.loggedInContainer}>\n                    {/* Your logged in components here */}\n                    <Button title=\"Log out\" onPress={() => setIsLoggedIn(false)} />\n                     \n\n       <View style={styles.container}>\n            <Navbar isUserLoggedIn={!!name} setActivePage={setActivePage} />\n         \n           \n\n                    {activePage === \"home\" && <Content name={name} email={email} setActivePage={setActivePage} />}\n                    {activePage === \"dictionary\" && <Dictionary word={selectedWord} />}\n                    {activePage === \"saved\" && <Saved name={name} email={email} onSelectWord={setSelectedWord} />}\n                    {activePage === \"quiz\" && <QuizComponent name={name} email={email} />}\n                    <Button title=\"Log out\" onPress={logout} />\n           \n      \n      </View>\n\n                </View>\n            ) : (\n                <View style={styles.formContainer}>\n                            <Image source={require('./data/spanishquiz.png')} style={styles.image} />\n\n                    <Text style={styles.header}>Login</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Email\" \n                        value={email}        // Updated value to email\n                        onChangeText={setEmail}  // Updated function to setEmail\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChangeText={setPassword}\n                        secureTextEntry={true}\n                    />\n                    <Button title=\"Login\" onPress={handleLogin} />\n<Text style={styles.messageText}>{loginMessage}</Text>  {/* This is for login */}\n\n                    <Text style={[styles.header, styles.marginTop]}>Register</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Register Email\"\n                        value={registerEmail}\n                        onChangeText={setRegisterEmail}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Register Password\"\n                        value={registerPassword}\n                        onChangeText={setRegisterPassword}\n                        secureTextEntry={true}\n                    />\n                    <Button title=\"Register\" onPress={handleRegister} />\n                    <Text style={styles.messageText}>{message}</Text>\n\n                </View>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#f4f4f4\",\n        padding: 20,\n    },\n    messageText: {\n    textAlign: 'center',\n    color: '#FF0000',  // red color for the message\n    marginBottom: 15,\n},\n       image: {\n        width: 300,\n        height: 200,\n        resizeMode: 'contain',\n        alignSelf: 'center',\n        marginBottom: 40,\n    },\n    loggedInContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    formContainer: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n\n    input: {\n        padding: 10,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        marginBottom: 15,\n        backgroundColor: '#fff',\n    },\n    marginTop: {\n        marginTop: 40,\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}