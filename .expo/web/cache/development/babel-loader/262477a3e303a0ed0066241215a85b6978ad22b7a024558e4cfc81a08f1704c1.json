{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Saved = function Saved(_ref) {\n  var name = _ref.name,\n    email = _ref.email,\n    onSelectWord = _ref.onSelectWord;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    savedWords = _useState2[0],\n    setSavedWords = _useState2[1];\n  var handleDeleteClick = function () {\n    var _ref2 = _asyncToGenerator(function* (index, event) {\n      event.preventDefault();\n      var wordToDelete = savedWords[index];\n      try {\n        console.log('starting');\n        console.log(wordToDelete);\n        console.log(email);\n        var response = yield fetch('https://skeba.info/netlify/deleteWord.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_email: email,\n            word: wordToDelete\n          })\n        });\n        var responseText = yield response.text();\n        console.log('Response Text:', responseText);\n        var data = JSON.parse(responseText);\n        if (data.success) {\n          setSavedWords(function (prevWords) {\n            return prevWords.filter(function (word) {\n              return word !== wordToDelete;\n            });\n          });\n        } else {\n          console.error('Error deleting word:', data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function handleDeleteClick(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleIconClick = function handleIconClick(index, event) {\n    event.preventDefault();\n    var word = savedWords[index];\n    onSelectWord(word);\n  };\n  useEffect(function () {\n    var fetchSavedWords = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(`https://skeba.info/netlify/getSavedWords.php?user_email=${email}`);\n          var data = yield response.json();\n          if (data && data.words) {\n            setSavedWords(data.words);\n          }\n        } catch (error) {\n          console.error('Error fetching saved words:', error);\n        }\n      });\n      return function fetchSavedWords() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchSavedWords();\n  }, [email]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Your Saved Verbs\"\n    }), savedWords.map(function (word, index) {\n      return _jsxs(View, {\n        style: styles.wordContainer,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: word\n        }), _jsx(Text, {\n          style: styles.iconQuestion,\n          onPress: function onPress(e) {\n            return handleIconClick(index, e);\n          },\n          children: \"search\"\n        }), _jsx(Text, {\n          style: styles.iconDelete,\n          onPress: function onPress(e) {\n            return handleDeleteClick(index, e);\n          },\n          children: \"delete\"\n        })]\n      }, index);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n    alignItems: 'center'\n  },\n  header: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  picker: {\n    width: 250,\n    height: 50,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 20,\n    backgroundColor: '#f8f8f8'\n  },\n  pickerItem: {\n    fontSize: 18\n  },\n  input: {\n    width: 200,\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginBottom: 20,\n    fontSize: 16\n  },\n  listItem: {\n    padding: 10,\n    marginVertical: 5,\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: '#ddd'\n  },\n  correctAnswer: {\n    backgroundColor: 'green'\n  },\n  incorrectAnswer: {\n    backgroundColor: 'red'\n  }\n});\nexport default Saved;","map":{"version":3,"names":["React","useState","useEffect","Text","View","StyleSheet","Button","jsx","_jsx","jsxs","_jsxs","Saved","_ref","name","email","onSelectWord","_useState","_useState2","_slicedToArray","savedWords","setSavedWords","handleDeleteClick","_ref2","_asyncToGenerator","index","event","preventDefault","wordToDelete","console","log","response","fetch","method","headers","body","JSON","stringify","user_email","word","responseText","text","data","parse","success","prevWords","filter","error","_x","_x2","apply","arguments","handleIconClick","fetchSavedWords","_ref3","json","words","style","styles","container","children","header","map","wordContainer","iconQuestion","onPress","e","iconDelete","create","flex","padding","backgroundColor","alignItems","fontSize","fontWeight","color","marginBottom","picker","width","height","borderColor","borderWidth","borderRadius","pickerItem","input","paddingHorizontal","listItem","marginVertical","correctAnswer","incorrectAnswer"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/Saved.js"],"sourcesContent":["//Saved.js\nimport React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Button} from 'react-native'; // Add missing components\n//import { useHistory } from 'react-router-dom';\n\n\nconst Saved = ({ name, email, onSelectWord }) => {\n    //const history = useHistory();\n \n    const [savedWords, setSavedWords] = useState([]);\n  const handleDeleteClick = async (index, event) => {\n        event.preventDefault();\n        const wordToDelete = savedWords[index];\n        \n        try {\n             console.log('starting');\n             console.log(wordToDelete);\n             console.log(email);\n            const response = await fetch('https://skeba.info/netlify/deleteWord.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_email: email,\n                    word: wordToDelete\n                })\n            });\nconst responseText = await response.text();\nconsole.log('Response Text:', responseText);\n\n// Now parse the logged text as JSON\nconst data = JSON.parse(responseText);\n          \n            if (data.success) {\n                // Remove the word from the savedWords state\n                setSavedWords(prevWords => prevWords.filter(word => word !== wordToDelete));\n            } else {\n                console.error('Error deleting word:', data.error);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n    const handleIconClick = (index, event) => {\n        event.preventDefault();\n        const word = savedWords[index];\n        onSelectWord(word);\n    };\n\n    useEffect(() => {\n        // Fetch the saved words from the database\n        const fetchSavedWords = async () => {\n            try {\n                const response = await fetch(`https://skeba.info/netlify/getSavedWords.php?user_email=${email}`);\n                const data = await response.json();\n                if (data && data.words) {\n                    setSavedWords(data.words);\n                }\n            } catch (error) {\n                console.error('Error fetching saved words:', error);\n            }\n        };\n\n        fetchSavedWords();\n    }, [email]);\n\n    return (\n        <View style={styles.container}>\n        <Text style={styles.header}>Your Saved Verbs</Text>\n        {savedWords.map((word, index) => (\n            <View key={index} style={styles.wordContainer}>\n                <Text style={styles.text}>{word}</Text>\n                <Text style={styles.iconQuestion} onPress={(e) => handleIconClick(index, e)}>\n                    search\n                </Text>\n                <Text style={styles.iconDelete} onPress={(e) => handleDeleteClick(index, e)}>\n                    delete\n                </Text>\n            </View>\n        ))}\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#f5f5f5',\n        alignItems: 'center',\n    },\n    header: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 20,\n    },\n    picker: {\n        width: 250,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        marginBottom: 20,\n        backgroundColor: '#f8f8f8',\n    },\n    pickerItem: {\n        fontSize: 18,\n    },\n    input: {\n        width: 200,\n        height: 40,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginBottom: 20,\n        fontSize: 16,\n    },\n    listItem: {\n        padding: 10,\n        marginVertical: 5,\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: '#ddd',\n    },\n    correctAnswer: {\n        backgroundColor: 'green',\n    },\n    incorrectAnswer: {\n        backgroundColor: 'red',\n    },\n});\n\nexport default Saved;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}