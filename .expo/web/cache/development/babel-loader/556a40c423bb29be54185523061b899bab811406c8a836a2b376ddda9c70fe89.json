{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport dictionaryData from \"./data/spanishdictionary.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dictionary = function Dictionary() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    difficulty = _useState2[0],\n    setDifficulty = _useState2[1];\n  var _useState3 = useState(''),\n    word = _useState3.word;\n  var _useState4 = useState(word || ''),\n    _useState5 = _slicedToArray(_useState4, 2),\n    searchTerm = _useState5[0],\n    setSearchTerm = _useState5[1];\n  var _useState6 = useState(''),\n    _useState7 = _slicedToArray(_useState6, 2),\n    searchResult = _useState7[0],\n    setSearchResult = _useState7[1];\n  var _useState8 = useState(null),\n    _useState9 = _slicedToArray(_useState8, 2),\n    displayedVerb = _useState9[0],\n    setDisplayedVerb = _useState9[1];\n  useEffect(function () {\n    if (word) {\n      handleSearch();\n    }\n  }, [word]);\n  var formMapping = {\n    \"form_1s\": \"Yo\",\n    \"form_2s\": \"Tu\",\n    \"form_3s\": \"Ella\",\n    \"form_1p\": \"Nosotros\",\n    \"form_2p\": \"Vosotros\",\n    \"form_3p\": \"Ellos\"\n  };\n  var tenseDescriptions = {\n    \"Preterite\": \"(simple past)\",\n    \"Present\": \"(present tense)\",\n    \"Future\": \"(future tense)\",\n    \"Imperfect\": \"(imperfect past)\",\n    \"Conditional\": \"(possibility)\",\n    \"Present Perfect\": \"(have)\",\n    \"Future Perfect\": \"(will have)\",\n    \"Past Perfect\": \"(had)\",\n    \"Conditional Perfect\": \"(would have)\"\n  };\n  var renderTenseDescription = function renderTenseDescription(tense) {\n    var description = tenseDescriptions[tense];\n    return description ? _jsx(Text, {\n      style: {\n        fontSize: 14,\n        marginTop: 10\n      },\n      children: description\n    }) : null;\n  };\n  var formatTense = function formatTense(tense) {\n    return tense.split('_').map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n  };\n  function formatGroupName(groupName) {\n    return groupName.split('_').map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n  }\n  var renderConjugationGroup = function renderConjugationGroup(groupName, conjugations) {\n    var tensesToExcludeForBeginners = [\"Conditional Perfect\", \"Future Perfect\", \"Past Perfect\", \"Present Perfect\"];\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.subHeader,\n        children: formatGroupName(groupName)\n      }), Object.entries(conjugations).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          tense = _ref2[0],\n          forms = _ref2[1];\n        if (difficulty === \"beginner\" && tensesToExcludeForBeginners.includes(formatTense(tense))) {\n          return null;\n        }\n        return _jsxs(View, {\n          style: styles.verbBlock,\n          children: [_jsxs(Text, {\n            style: styles.tenseHeader,\n            children: [formatTense(tense), renderTenseDescription(formatTense(tense))]\n          }), _jsx(View, {\n            style: styles.listContainer,\n            children: Object.entries(forms).map(function (_ref3) {\n              var _ref4 = _slicedToArray(_ref3, 2),\n                form = _ref4[0],\n                verb = _ref4[1];\n              return _jsxs(Text, {\n                style: styles.listItem,\n                children: [formMapping[form], \" \", verb]\n              }, form);\n            })\n          })]\n        }, tense);\n      })]\n    }, groupName);\n  };\n  var allowedTensesForBeginner = {\n    \"indicative\": [\"present\", \"preterite\", \"imperfect\", \"conditional\", \"future\"]\n  };\n  var renderConjugations = function renderConjugations(verbData) {\n    return _jsx(View, {\n      children: Object.entries(verbData.useage).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          groupName = _ref6[0],\n          conjugations = _ref6[1];\n        var _groupName$split = groupName.split(\"_\"),\n          _groupName$split2 = _slicedToArray(_groupName$split, 2),\n          mainCategory = _groupName$split2[0],\n          subCategory = _groupName$split2[1];\n        if (difficulty === \"beginner\") {\n          if (!allowedTensesForBeginner[mainCategory] || subCategory && !allowedTensesForBeginner[mainCategory].includes(subCategory)) {\n            return null;\n          }\n        }\n        return renderConjugationGroup(groupName, conjugations);\n      })\n    });\n  };\n  var handleSearch = function handleSearch() {\n    var _verbData$meta;\n    var lowercaseSearchTerm = searchTerm.toLowerCase();\n    var verbData = dictionaryData[lowercaseSearchTerm];\n    var infinitiveEnglish = (verbData == null ? void 0 : (_verbData$meta = verbData.meta) == null ? void 0 : _verbData$meta.infinitive_english) || \"no word found\";\n    setSearchResult(infinitiveEnglish);\n    setDisplayedVerb(verbData);\n  };\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.centered,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Verb Conjugation Dictionary\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter a word...\",\n        value: searchTerm,\n        onChangeText: setSearchTerm\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(Button, {\n          title: \"Submit\",\n          onPress: handleSearch,\n          color: \"#007AFF\"\n        })\n      }), _jsx(Text, {\n        style: styles.boldText,\n        children: searchResult\n      }), displayedVerb && renderConjugations(displayedVerb)]\n    })\n  });\n};\nexport default Dictionary;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  centered: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  header: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  input: {\n    width: 280,\n    height: 50,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 8,\n    backgroundColor: 'white',\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    fontSize: 16\n  },\n  buttonContainer: {\n    width: 200,\n    marginBottom: 20\n  },\n  subHeader: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#555',\n    marginBottom: 10\n  },\n  tenseHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#666',\n    marginBottom: 5\n  },\n  boldText: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: '#444',\n    marginVertical: 10\n  },\n  listItem: {\n    fontSize: 16,\n    color: '#777',\n    marginVertical: 4\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","View","TextInput","Button","StyleSheet","ScrollView","dictionaryData","jsx","_jsx","jsxs","_jsxs","Dictionary","_useState","_useState2","_slicedToArray","difficulty","setDifficulty","_useState3","word","_useState4","_useState5","searchTerm","setSearchTerm","_useState6","_useState7","searchResult","setSearchResult","_useState8","_useState9","displayedVerb","setDisplayedVerb","handleSearch","formMapping","tenseDescriptions","renderTenseDescription","tense","description","style","fontSize","marginTop","children","formatTense","split","map","charAt","toUpperCase","slice","join","formatGroupName","groupName","renderConjugationGroup","conjugations","tensesToExcludeForBeginners","styles","subHeader","Object","entries","_ref","_ref2","forms","includes","verbBlock","tenseHeader","listContainer","_ref3","_ref4","form","verb","listItem","allowedTensesForBeginner","renderConjugations","verbData","useage","_ref5","_ref6","_groupName$split","_groupName$split2","mainCategory","subCategory","_verbData$meta","lowercaseSearchTerm","toLowerCase","infinitiveEnglish","meta","infinitive_english","container","centered","header","input","placeholder","value","onChangeText","buttonContainer","title","onPress","color","boldText","create","flex","backgroundColor","alignItems","justifyContent","padding","fontWeight","textAlign","marginBottom","width","height","borderColor","borderWidth","borderRadius","paddingHorizontal","marginVertical"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/Dictionary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Text, View, TextInput, Button, StyleSheet, ScrollView } from 'react-native';\nimport dictionaryData from './data/spanishdictionary.json';\n\nconst Dictionary = () => {\nconst [difficulty, setDifficulty] = useState(null);\n\n\n\n\n const { word } = useState('');\n    const [searchTerm, setSearchTerm] = useState(word || '');\n    const [searchResult, setSearchResult] = useState('');\n    const [displayedVerb, setDisplayedVerb] = useState(null);\n\n\n    useEffect(() => {\n        if (word) {\n            handleSearch();\n        }\n        // eslint-disable-next-line\n    }, [word]);\n    const formMapping = {\n        \"form_1s\": \"Yo\",\n        \"form_2s\": \"Tu\",\n        \"form_3s\": \"Ella\",\n        \"form_1p\": \"Nosotros\",\n        \"form_2p\": \"Vosotros\",\n        \"form_3p\": \"Ellos\"\n    };\nconst tenseDescriptions = {\n    \"Preterite\": \"(simple past)\",\n    \"Present\": \"(present tense)\",\n    \"Future\": \"(future tense)\",\n   \"Imperfect\": \"(imperfect past)\",\n   \"Conditional\": \"(possibility)\",\n    \"Present Perfect\": \"(have)\",\n    \"Future Perfect\": \"(will have)\",\n    \"Past Perfect\": \"(had)\",\n    \"Conditional Perfect\": \"(would have)\",\n};\nconst renderTenseDescription = (tense) => {\n    const description = tenseDescriptions[tense];\nreturn description ? (\n    <Text style={{fontSize: 14, marginTop: 10}}>{description}</Text>\n) : null;\n\n};\nconst formatTense = (tense) => {\n    return tense.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n};\nfunction formatGroupName(groupName) {\n    return groupName.split('_')\n                    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(' ');\n}\n    const renderConjugationGroup = (groupName, conjugations) => {\n          const tensesToExcludeForBeginners = [\n        \"Conditional Perfect\", \n        \"Future Perfect\", \n        \"Past Perfect\", \n        \"Present Perfect\"\n    ];\n   return (\n\n     <View key={groupName}>\n    <Text style={styles.subHeader}>{formatGroupName(groupName)}</Text>\n    {Object.entries(conjugations).map(([tense, forms]) => {\n        // Exclude specific tenses for beginners\n        if (difficulty === \"beginner\" && tensesToExcludeForBeginners.includes(formatTense(tense))) {\n            return null;\n        }\n        return (\n            <View style={styles.verbBlock} key={tense}>\n                <Text style={styles.tenseHeader}>\n                    {formatTense(tense)}\n                    {renderTenseDescription(formatTense(tense))}\n                </Text>\n                <View style={styles.listContainer}>\n                    {Object.entries(forms).map(([form, verb]) => (\n                        <Text style={styles.listItem} key={form}>\n                            {formMapping[form]} {verb}\n                        </Text>\n                    ))}\n                </View>\n            </View>\n        );\n    })}\n</View>\n\n    );\n}\n\n\n\n\n\n\nconst allowedTensesForBeginner = {\n    \"indicative\": [\"present\", \"preterite\", \"imperfect\", \"conditional\", \"future\"]\n    // Add other main categories and their subcategories if needed in the future\n};\n const renderConjugations = (verbData) => {\n\n    \n\n    return (\n\n\n<View>\n    {Object.entries(verbData.useage).map(([groupName, conjugations]) => {\n        const [mainCategory, subCategory] = groupName.split(\"_\");\n        \n        // For beginners, check both main category and subcategory\n        if (difficulty === \"beginner\") {\n            if (!allowedTensesForBeginner[mainCategory] || \n                (subCategory && !allowedTensesForBeginner[mainCategory].includes(subCategory))) {\n                return null;  // Don't render disallowed tenses\n            }\n        }\n\n        return renderConjugationGroup(groupName, conjugations);\n    })}\n</View>\n    );\n}\n\nconst handleSearch = () => {\n    const lowercaseSearchTerm = searchTerm.toLowerCase();\n    const verbData = dictionaryData[lowercaseSearchTerm];\n    const infinitiveEnglish = verbData?.meta?.infinitive_english || \"no word found\";\n    setSearchResult(infinitiveEnglish);\n    setDisplayedVerb(verbData);\n};\n\n\n      return (\n        <ScrollView style={styles.container}>\n            <View style={styles.centered}>\n                <Text style={styles.header}>Verb Conjugation Dictionary</Text>\n\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Enter a word...\"\n                    value={searchTerm}\n                    onChangeText={setSearchTerm} \n                />\n                <View style={styles.buttonContainer}>\n                    <Button title=\"Submit\" onPress={handleSearch} color=\"#007AFF\" />\n                </View>\n\n                <Text style={styles.boldText}>{searchResult}</Text>\n\n                {displayedVerb && renderConjugations(displayedVerb)}\n            </View>\n        </ScrollView>\n    );\n}\n\nexport default Dictionary;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f5f5f5',\n    },\n    centered: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    header: {\n        fontSize: 26,\n        fontWeight: 'bold',\n        color: '#333',\n        textAlign: 'center',\n        marginBottom: 20,\n    },\n    input: {\n        width: 280,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 8,\n        backgroundColor: 'white',\n        marginBottom: 20,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n    buttonContainer: {\n        width: 200,\n        marginBottom: 20,\n    },\n    subHeader: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#555',\n        marginBottom: 10,\n    },\n    tenseHeader: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#666',\n        marginBottom: 5,\n    },\n    boldText: {\n        fontWeight: 'bold',\n        fontSize: 18,\n        color: '#444',\n        marginVertical: 10,\n    },\n    listItem: {\n        fontSize: 16,\n        color: '#777',\n        marginVertical: 4,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}