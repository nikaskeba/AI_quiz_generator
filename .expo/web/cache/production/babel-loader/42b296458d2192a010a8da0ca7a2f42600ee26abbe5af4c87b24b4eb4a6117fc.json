{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import invariant from'invariant';import qs from'qs';export function buildQueryString(input){return qs.stringify(input);}export function getQueryParams(url){var _parsedSearch$errorCo;var parts=url.split('#');var hash=parts[1];var partsWithoutHash=parts[0].split('?');var queryString=partsWithoutHash[partsWithoutHash.length-1];var parsedSearch=qs.parse(queryString,{parseArrays:false});var errorCode=(_parsedSearch$errorCo=parsedSearch.errorCode)!=null?_parsedSearch$errorCo:null;invariant(typeof errorCode==='string'||errorCode===null,`The \"errorCode\" parameter must be a string if specified`);delete parsedSearch.errorCode;var parsedHash={};if(parts[1]){parsedHash=qs.parse(hash);}var params=_objectSpread(_objectSpread({},parsedSearch),parsedHash);return{errorCode:errorCode,params:params};}","map":{"version":3,"names":["invariant","qs","buildQueryString","input","stringify","getQueryParams","url","_parsedSearch$errorCo","parts","split","hash","partsWithoutHash","queryString","length","parsedSearch","parse","parseArrays","errorCode","parsedHash","params","_objectSpread"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/node_modules/expo-auth-session/src/QueryParams.ts"],"sourcesContent":["import invariant from 'invariant';\nimport qs from 'qs';\n\nexport function buildQueryString(input: Record<string, string>): string {\n  return qs.stringify(input);\n}\n\nexport function getQueryParams(url: string): {\n  errorCode: string | null;\n  params: { [key: string]: string };\n} {\n  const parts = url.split('#');\n  const hash = parts[1];\n  const partsWithoutHash = parts[0].split('?');\n  const queryString = partsWithoutHash[partsWithoutHash.length - 1];\n\n  // Get query string (?hello=world)\n  const parsedSearch = qs.parse(queryString, { parseArrays: false });\n\n  // Pull errorCode off of params\n  const errorCode = (parsedSearch.errorCode ?? null) as string | null;\n  invariant(\n    typeof errorCode === 'string' || errorCode === null,\n    `The \"errorCode\" parameter must be a string if specified`\n  );\n  delete parsedSearch.errorCode;\n\n  // Get hash (#abc=example)\n  let parsedHash = {};\n  if (parts[1]) {\n    parsedHash = qs.parse(hash);\n  }\n\n  // Merge search and hash\n  const params = {\n    ...parsedSearch,\n    ...parsedHash,\n  };\n\n  return {\n    errorCode,\n    params,\n  };\n}\n"],"mappings":"+qBAAA,MAAO,CAAAA,SAAS,KAAM,WAAW,CACjC,MAAO,CAAAC,EAAE,KAAM,IAAI,CAEnB,MAAM,SAAU,CAAAC,gBAAgBA,CAACC,KAA6B,EAC5D,MAAO,CAAAF,EAAE,CAACG,SAAS,CAACD,KAAK,CAAC,CAC5B,CAEA,MAAM,SAAU,CAAAE,cAAcA,CAACC,GAAW,MAAAC,qBAAA,CAIxC,GAAM,CAAAC,KAAK,CAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC,CAC5B,GAAM,CAAAC,IAAI,CAAGF,KAAK,CAAC,CAAC,CAAC,CACrB,GAAM,CAAAG,gBAAgB,CAAGH,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAC5C,GAAM,CAAAG,WAAW,CAAGD,gBAAgB,CAACA,gBAAgB,CAACE,MAAM,CAAG,CAAC,CAAC,CAGjE,GAAM,CAAAC,YAAY,CAAGb,EAAE,CAACc,KAAK,CAACH,WAAW,CAAE,CAAEI,WAAW,CAAE,KAAK,CAAE,CAAC,CAGlE,GAAM,CAAAC,SAAS,EAAAV,qBAAA,CAAIO,YAAY,CAACG,SAAS,QAAAV,qBAAA,CAAI,IAAsB,CACnEP,SAAS,CACP,MAAO,CAAAiB,SAAS,GAAK,QAAQ,EAAIA,SAAS,GAAK,IAAI,CACnD,yDAAyD,CAC1D,CACD,MAAO,CAAAH,YAAY,CAACG,SAAS,CAG7B,GAAI,CAAAC,UAAU,CAAG,EAAE,CACnB,GAAIV,KAAK,CAAC,CAAC,CAAC,CAAE,CACZU,UAAU,CAAGjB,EAAE,CAACc,KAAK,CAACL,IAAI,CAAC,C,CAI7B,GAAM,CAAAS,MAAM,CAAAC,aAAA,CAAAA,aAAA,IACPN,YAAY,EACZI,UAAU,CACd,CAED,MAAO,CACLD,SAAS,CAATA,SAAS,CACTE,MAAM,CAANA,M,CACD,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}