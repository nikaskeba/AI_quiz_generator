{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"windowFeatures\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{useCallback,useMemo,useEffect,useState}from'react';import{AuthRequest}from\"./AuthRequest\";import{resolveDiscoveryAsync}from\"./Discovery\";export function useAutoDiscovery(issuerOrDiscovery){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),discovery=_useState2[0],setDiscovery=_useState2[1];useEffect(function(){var isAllowed=true;resolveDiscoveryAsync(issuerOrDiscovery).then(function(discovery){if(isAllowed){setDiscovery(discovery);}});return function(){isAllowed=false;};},[issuerOrDiscovery]);return discovery;}export function useLoadedAuthRequest(config,discovery,AuthRequestInstance){var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),request=_useState4[0],setRequest=_useState4[1];var scopeString=useMemo(function(){var _config$scopes;return(_config$scopes=config.scopes)==null?void 0:_config$scopes.join(',');},[config.scopes]);var extraParamsString=useMemo(function(){return JSON.stringify(config.extraParams||{});},[config.extraParams]);useEffect(function(){var isMounted=true;if(discovery){var _request=new AuthRequestInstance(config);_request.makeAuthUrlAsync(discovery).then(function(){if(isMounted){setRequest(_request);}});}return function(){isMounted=false;};},[discovery==null?void 0:discovery.authorizationEndpoint,config.clientId,config.redirectUri,config.responseType,config.prompt,config.clientSecret,config.codeChallenge,config.state,config.usePKCE,scopeString,extraParamsString]);return request;}export function useAuthRequestResult(request,discovery){var customOptions=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),result=_useState6[0],setResult=_useState6[1];var promptAsync=useCallback(_asyncToGenerator(function*(){var _customOptions$window;var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref$windowFeatures=_ref.windowFeatures,windowFeatures=_ref$windowFeatures===void 0?{}:_ref$windowFeatures,options=_objectWithoutProperties(_ref,_excluded);if(!discovery||!request){throw new Error('Cannot prompt to authenticate until the request has finished loading.');}var inputOptions=_objectSpread(_objectSpread(_objectSpread({},customOptions),options),{},{windowFeatures:_objectSpread(_objectSpread({},(_customOptions$window=customOptions.windowFeatures)!=null?_customOptions$window:{}),windowFeatures)});var result=yield request==null?void 0:request.promptAsync(discovery,inputOptions);setResult(result);return result;}),[request==null?void 0:request.url,discovery==null?void 0:discovery.authorizationEndpoint]);return[result,promptAsync];}export function useAuthRequest(config,discovery){var request=useLoadedAuthRequest(config,discovery,AuthRequest);var _useAuthRequestResult=useAuthRequestResult(request,discovery),_useAuthRequestResult2=_slicedToArray(_useAuthRequestResult,2),result=_useAuthRequestResult2[0],promptAsync=_useAuthRequestResult2[1];return[request,result,promptAsync];}","map":{"version":3,"names":["useCallback","useMemo","useEffect","useState","AuthRequest","resolveDiscoveryAsync","useAutoDiscovery","issuerOrDiscovery","_useState","_useState2","_slicedToArray","discovery","setDiscovery","isAllowed","then","useLoadedAuthRequest","config","AuthRequestInstance","_useState3","_useState4","request","setRequest","scopeString","_config$scopes","scopes","join","extraParamsString","JSON","stringify","extraParams","isMounted","makeAuthUrlAsync","authorizationEndpoint","clientId","redirectUri","responseType","prompt","clientSecret","codeChallenge","state","usePKCE","useAuthRequestResult","customOptions","arguments","length","undefined","_useState5","_useState6","result","setResult","promptAsync","_asyncToGenerator","_customOptions$window","_ref","_ref$windowFeatures","windowFeatures","options","_objectWithoutProperties","_excluded","Error","inputOptions","_objectSpread","url","useAuthRequest","_useAuthRequestResult","_useAuthRequestResult2"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/node_modules/expo-auth-session/src/AuthRequestHooks.ts"],"sourcesContent":["import { useCallback, useMemo, useEffect, useState } from 'react';\n\nimport { AuthRequest } from './AuthRequest';\nimport { AuthRequestConfig, AuthRequestPromptOptions } from './AuthRequest.types';\nimport { AuthSessionResult } from './AuthSession.types';\nimport { DiscoveryDocument, IssuerOrDiscovery, resolveDiscoveryAsync } from './Discovery';\n\n// @needsAudit\n/**\n * Given an OpenID Connect issuer URL, this will fetch and return the [`DiscoveryDocument`](#discoverydocument)\n * (a collection of URLs) from the resource provider.\n *\n * @param issuerOrDiscovery URL using the `https` scheme with no query or fragment component that the OP asserts as its Issuer Identifier.\n * @return Returns `null` until the [`DiscoveryDocument`](#discoverydocument) has been fetched from the provided issuer URL.\n *\n * @example\n * ```ts\n * const discovery = useAutoDiscovery('https://example.com/auth');\n * ```\n */\nexport function useAutoDiscovery(issuerOrDiscovery: IssuerOrDiscovery): DiscoveryDocument | null {\n  const [discovery, setDiscovery] = useState<DiscoveryDocument | null>(null);\n\n  useEffect(() => {\n    let isAllowed = true;\n    resolveDiscoveryAsync(issuerOrDiscovery).then((discovery) => {\n      if (isAllowed) {\n        setDiscovery(discovery);\n      }\n    });\n\n    return () => {\n      isAllowed = false;\n    };\n  }, [issuerOrDiscovery]);\n\n  return discovery;\n}\n\nexport function useLoadedAuthRequest(\n  config: AuthRequestConfig,\n  discovery: DiscoveryDocument | null,\n  AuthRequestInstance: typeof AuthRequest\n): AuthRequest | null {\n  const [request, setRequest] = useState<AuthRequest | null>(null);\n  const scopeString = useMemo(() => config.scopes?.join(','), [config.scopes]);\n  const extraParamsString = useMemo(\n    () => JSON.stringify(config.extraParams || {}),\n    [config.extraParams]\n  );\n  useEffect(() => {\n    let isMounted = true;\n\n    if (discovery) {\n      const request = new AuthRequestInstance(config);\n      request.makeAuthUrlAsync(discovery).then(() => {\n        if (isMounted) {\n          setRequest(request);\n        }\n      });\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [\n    discovery?.authorizationEndpoint,\n    config.clientId,\n    config.redirectUri,\n    config.responseType,\n    config.prompt,\n    config.clientSecret,\n    config.codeChallenge,\n    config.state,\n    config.usePKCE,\n    scopeString,\n    extraParamsString,\n  ]);\n  return request;\n}\n\ntype PromptMethod = (options?: AuthRequestPromptOptions) => Promise<AuthSessionResult>;\n\nexport function useAuthRequestResult(\n  request: AuthRequest | null,\n  discovery: DiscoveryDocument | null,\n  customOptions: AuthRequestPromptOptions = {}\n): [AuthSessionResult | null, PromptMethod] {\n  const [result, setResult] = useState<AuthSessionResult | null>(null);\n\n  const promptAsync = useCallback(\n    async ({ windowFeatures = {}, ...options }: AuthRequestPromptOptions = {}) => {\n      if (!discovery || !request) {\n        throw new Error('Cannot prompt to authenticate until the request has finished loading.');\n      }\n      const inputOptions = {\n        ...customOptions,\n        ...options,\n        windowFeatures: {\n          ...(customOptions.windowFeatures ?? {}),\n          ...windowFeatures,\n        },\n      };\n      const result = await request?.promptAsync(discovery, inputOptions);\n      setResult(result);\n      return result;\n    },\n    [request?.url, discovery?.authorizationEndpoint]\n  );\n\n  return [result, promptAsync];\n}\n\n// @needsAudit\n/**\n * Load an authorization request for a code. When the prompt method completes then the response will be fulfilled.\n *\n * > In order to close the popup window on web, you need to invoke `WebBrowser.maybeCompleteAuthSession()`.\n * > See the [Identity example](/guides/authentication#identityserver-4) for more info.\n *\n * If an Implicit grant flow was used, you can pass the `response.params` to `TokenResponse.fromQueryParams()`\n * to get a `TokenResponse` instance which you can use to easily refresh the token.\n *\n * @param config A valid [`AuthRequestConfig`](#authrequestconfig) that specifies what provider to use.\n * @param discovery A loaded [`DiscoveryDocument`](#discoverydocument) with endpoints used for authenticating.\n * Only `authorizationEndpoint` is required for requesting an authorization code.\n *\n * @return Returns a loaded request, a response, and a prompt method in a single array in the following order:\n * - `request` - An instance of [`AuthRequest`](#authrequest) that can be used to prompt the user for authorization.\n *   This will be `null` until the auth request has finished loading.\n * - `response` - This is `null` until `promptAsync` has been invoked. Once fulfilled it will return information about the authorization.\n * - `promptAsync` - When invoked, a web browser will open up and prompt the user for authentication.\n *   Accepts an [`AuthRequestPromptOptions`](#authrequestpromptoptions) object with options about how the prompt will execute.\n *\n * @example\n * ```ts\n * const [request, response, promptAsync] = useAuthRequest({ ... }, { ... });\n * ```\n */\nexport function useAuthRequest(\n  config: AuthRequestConfig,\n  discovery: DiscoveryDocument | null\n): [\n  AuthRequest | null,\n  AuthSessionResult | null,\n  (options?: AuthRequestPromptOptions) => Promise<AuthSessionResult>\n] {\n  const request = useLoadedAuthRequest(config, discovery, AuthRequest);\n  const [result, promptAsync] = useAuthRequestResult(request, discovery);\n  return [request, result, promptAsync];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}