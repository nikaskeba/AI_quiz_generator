{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _deepAssign=_interopRequireDefault(require(\"deep-assign\"));var mergeLocalStorageItem=function mergeLocalStorageItem(key,value){var oldValue=window.localStorage.getItem(key);var oldObject=JSON.parse(oldValue);var newObject=JSON.parse(value);var nextValue=JSON.stringify((0,_deepAssign.default)({},oldObject,newObject));window.localStorage.setItem(key,nextValue);};var createPromise=function createPromise(getValue,callback){return new Promise(function(resolve,reject){try{var value=getValue();if(callback){callback(null,value);}resolve(value);}catch(err){if(callback){callback(err);}reject(err);}});};var createPromiseAll=function createPromiseAll(promises,callback,processResult){return Promise.all(promises).then(function(result){var value=processResult?processResult(result):null;callback&&callback(null,value);return Promise.resolve(value);},function(errors){callback&&callback(errors);return Promise.reject(errors);});};var AsyncStorage=function(){function AsyncStorage(){(0,_classCallCheck2.default)(this,AsyncStorage);}(0,_createClass2.default)(AsyncStorage,null,[{key:\"getItem\",value:function getItem(key,callback){return createPromise(function(){return window.localStorage.getItem(key);},callback);}},{key:\"setItem\",value:function setItem(key,value,callback){return createPromise(function(){window.localStorage.setItem(key,value);},callback);}},{key:\"removeItem\",value:function removeItem(key,callback){return createPromise(function(){return window.localStorage.removeItem(key);},callback);}},{key:\"mergeItem\",value:function mergeItem(key,value,callback){return createPromise(function(){mergeLocalStorageItem(key,value);},callback);}},{key:\"clear\",value:function clear(callback){return createPromise(function(){window.localStorage.clear();},callback);}},{key:\"getAllKeys\",value:function getAllKeys(callback){return createPromise(function(){var numberOfKeys=window.localStorage.length;var keys=[];for(var i=0;i<numberOfKeys;i+=1){var key=window.localStorage.key(i);keys.push(key);}return keys;},callback);}},{key:\"flushGetRequests\",value:function flushGetRequests(){}},{key:\"multiGet\",value:function multiGet(keys,callback){var promises=keys.map(function(key){return AsyncStorage.getItem(key);});var processResult=function processResult(result){return result.map(function(value,i){return[keys[i],value];});};return createPromiseAll(promises,callback,processResult);}},{key:\"multiSet\",value:function multiSet(keyValuePairs,callback){var promises=keyValuePairs.map(function(item){return AsyncStorage.setItem(item[0],item[1]);});return createPromiseAll(promises,callback);}},{key:\"multiRemove\",value:function multiRemove(keys,callback){var promises=keys.map(function(key){return AsyncStorage.removeItem(key);});return createPromiseAll(promises,callback);}},{key:\"multiMerge\",value:function multiMerge(keyValuePairs,callback){var promises=keyValuePairs.map(function(item){return AsyncStorage.mergeItem(item[0],item[1]);});return createPromiseAll(promises,callback);}}]);return AsyncStorage;}();exports.default=AsyncStorage;","map":{"version":3,"names":["_deepAssign","_interopRequireDefault","require","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","default","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","removeItem","clear","numberOfKeys","length","keys","i","push","map","keyValuePairs","item","mergeItem"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/node_modules/@react-native-community/async-storage/lib/module/AsyncStorage.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport merge from 'deep-assign';\n\nconst mergeLocalStorageItem = (key, value) => {\n  const oldValue = window.localStorage.getItem(key);\n  const oldObject = JSON.parse(oldValue);\n  const newObject = JSON.parse(value);\n  const nextValue = JSON.stringify(merge({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nconst createPromise = (getValue, callback): Promise<*> => {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = getValue();\n      if (callback) {\n        callback(null, value);\n      }\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n    }\n  });\n};\n\nconst createPromiseAll = (promises, callback, processResult): Promise<*> => {\n  return Promise.all(promises).then(\n    result => {\n      const value = processResult ? processResult(result) : null;\n      callback && callback(null, value);\n      return Promise.resolve(value);\n    },\n    errors => {\n      callback && callback(errors);\n      return Promise.reject(errors);\n    }\n  );\n};\n\nexport default class AsyncStorage {\n\n  /**\n   * Fetches `key` value.\n   */\n  static getItem(key: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      return window.localStorage.getItem(key);\n    }, callback);\n  }\n\n  /**\n   * Sets `value` for `key`.\n   */\n  static setItem(key: string, value: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  }\n\n  /**\n   * Removes a `key`\n   */\n  static removeItem(key: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  }\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  static mergeItem(key: string, value: string, callback?: Function): Promise<*> {\n    return createPromise(() => {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  }\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  static clear(callback?: Function): Promise<*> {\n    return createPromise(() => {\n      window.localStorage.clear();\n    }, callback);\n  }\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  static getAllKeys(callback?: Function): Promise<*> {\n    return createPromise(() => {\n      const numberOfKeys = window.localStorage.length;\n      const keys = [];\n      for (let i = 0; i < numberOfKeys; i += 1) {\n        const key = window.localStorage.key(i);\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  }\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  static flushGetRequests() {}\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  static multiGet(keys: Array<string>, callback?: Function): Promise<*> {\n    const promises = keys.map(key => AsyncStorage.getItem(key));\n    const processResult = result => result.map((value, i) => [keys[i], value]);\n    return createPromiseAll(promises, callback, processResult);\n  }\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  static multiSet(keyValuePairs: Array<Array<string>>, callback?: Function): Promise<*> {\n    const promises = keyValuePairs.map(item => AsyncStorage.setItem(item[0], item[1]));\n    return createPromiseAll(promises, callback);\n  }\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  static multiRemove(keys: Array<string>, callback?: Function): Promise<*> {\n    const promises = keys.map(key => AsyncStorage.removeItem(key));\n    return createPromiseAll(promises, callback);\n  }\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  static multiMerge(keyValuePairs: Array<Array<string>>, callback?: Function): Promise<*> {\n    const promises = keyValuePairs.map(item => AsyncStorage.mergeItem(item[0], item[1]));\n    return createPromiseAll(promises, callback);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}