{"ast":null,"code":"import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import invariant from'invariant';import Platform from\"react-native-web/dist/exports/Platform\";import*as Base64 from\"./Base64\";import{TokenError}from\"./Errors\";import{requestAsync}from\"./Fetch\";import{GrantType}from\"./TokenRequest.types\";export function getCurrentTimeInSeconds(){return Math.floor(Date.now()/1000);}export var TokenResponse=function(){function TokenResponse(response){var _response$tokenType,_response$issuedAt;_classCallCheck(this,TokenResponse);this.accessToken=response.accessToken;this.tokenType=(_response$tokenType=response.tokenType)!=null?_response$tokenType:'bearer';this.expiresIn=response.expiresIn;this.refreshToken=response.refreshToken;this.scope=response.scope;this.state=response.state;this.idToken=response.idToken;this.issuedAt=(_response$issuedAt=response.issuedAt)!=null?_response$issuedAt:getCurrentTimeInSeconds();}_createClass(TokenResponse,[{key:\"applyResponseConfig\",value:function applyResponseConfig(response){var _response$accessToken,_ref,_response$tokenType2,_response$expiresIn,_response$refreshToke,_response$scope,_response$state,_response$idToken,_ref2,_response$issuedAt2;this.accessToken=(_response$accessToken=response.accessToken)!=null?_response$accessToken:this.accessToken;this.tokenType=(_ref=(_response$tokenType2=response.tokenType)!=null?_response$tokenType2:this.tokenType)!=null?_ref:'bearer';this.expiresIn=(_response$expiresIn=response.expiresIn)!=null?_response$expiresIn:this.expiresIn;this.refreshToken=(_response$refreshToke=response.refreshToken)!=null?_response$refreshToke:this.refreshToken;this.scope=(_response$scope=response.scope)!=null?_response$scope:this.scope;this.state=(_response$state=response.state)!=null?_response$state:this.state;this.idToken=(_response$idToken=response.idToken)!=null?_response$idToken:this.idToken;this.issuedAt=(_ref2=(_response$issuedAt2=response.issuedAt)!=null?_response$issuedAt2:this.issuedAt)!=null?_ref2:getCurrentTimeInSeconds();}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{accessToken:this.accessToken,idToken:this.idToken,refreshToken:this.refreshToken,scope:this.scope,state:this.state,tokenType:this.tokenType,issuedAt:this.issuedAt,expiresIn:this.expiresIn};}},{key:\"refreshAsync\",value:function(){var _refreshAsync=_asyncToGenerator(function*(config,discovery){var _response$refreshToke2;var request=new RefreshTokenRequest(_objectSpread(_objectSpread({},config),{},{refreshToken:this.refreshToken}));var response=yield request.performAsync(discovery);response.refreshToken=(_response$refreshToke2=response.refreshToken)!=null?_response$refreshToke2:this.refreshToken;var json=response.getRequestConfig();this.applyResponseConfig(json);return this;});function refreshAsync(_x,_x2){return _refreshAsync.apply(this,arguments);}return refreshAsync;}()},{key:\"shouldRefresh\",value:function shouldRefresh(){return!(TokenResponse.isTokenFresh(this)||!this.refreshToken);}}],[{key:\"isTokenFresh\",value:function isTokenFresh(token){var secondsMargin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:60*10*-1;if(!token){return false;}if(token.expiresIn){var now=getCurrentTimeInSeconds();return now<token.issuedAt+token.expiresIn+secondsMargin;}return true;}},{key:\"fromQueryParams\",value:function fromQueryParams(params){return new TokenResponse({accessToken:params.access_token,refreshToken:params.refresh_token,scope:params.scope,state:params.state,idToken:params.id_token,tokenType:params.token_type,expiresIn:params.expires_in,issuedAt:params.issued_at});}}]);return TokenResponse;}();var Request=function(){function Request(request){_classCallCheck(this,Request);this.request=request;}_createClass(Request,[{key:\"performAsync\",value:function(){var _performAsync=_asyncToGenerator(function*(discovery){throw new Error('performAsync must be extended');});function performAsync(_x3){return _performAsync.apply(this,arguments);}return performAsync;}()},{key:\"getRequestConfig\",value:function getRequestConfig(){throw new Error('getRequestConfig must be extended');}},{key:\"getQueryBody\",value:function getQueryBody(){throw new Error('getQueryBody must be extended');}}]);return Request;}();var TokenRequest=function(_Request){_inherits(TokenRequest,_Request);var _super=_createSuper(TokenRequest);function TokenRequest(request,grantType){var _this;_classCallCheck(this,TokenRequest);_this=_super.call(this,request);_this.grantType=grantType;_this.clientId=request.clientId;_this.clientSecret=request.clientSecret;_this.extraParams=request.extraParams;_this.scopes=request.scopes;return _this;}_createClass(TokenRequest,[{key:\"getHeaders\",value:function getHeaders(){var headers={'Content-Type':'application/x-www-form-urlencoded'};if(typeof this.clientSecret!=='undefined'){var encodedClientId=encodeURIComponent(this.clientId);var encodedClientSecret=encodeURIComponent(this.clientSecret);var credentials=`${encodedClientId}:${encodedClientSecret}`;var basicAuth=Base64.encodeNoWrap(credentials);headers.Authorization=`Basic ${basicAuth}`;}return headers;}},{key:\"performAsync\",value:function(){var _performAsync2=_asyncToGenerator(function*(discovery){invariant(discovery.tokenEndpoint,`Cannot invoke \\`performAsync()\\` without a valid tokenEndpoint`);var response=yield requestAsync(discovery.tokenEndpoint,{dataType:'json',method:'POST',headers:this.getHeaders(),body:this.getQueryBody()});if('error'in response){throw new TokenError(response);}return new TokenResponse({accessToken:response.access_token,tokenType:response.token_type,expiresIn:response.expires_in,refreshToken:response.refresh_token,scope:response.scope,idToken:response.id_token,issuedAt:response.issued_at});});function performAsync(_x4){return _performAsync2.apply(this,arguments);}return performAsync;}()},{key:\"getQueryBody\",value:function getQueryBody(){var queryBody={grant_type:this.grantType};if(!this.clientSecret){queryBody.client_id=this.clientId;}if(this.scopes){queryBody.scope=this.scopes.join(' ');}if(this.extraParams){for(var extra in this.extraParams){if(extra in this.extraParams&&!(extra in queryBody)){queryBody[extra]=this.extraParams[extra];}}}return queryBody;}}]);return TokenRequest;}(Request);export var AccessTokenRequest=function(_TokenRequest){_inherits(AccessTokenRequest,_TokenRequest);var _super2=_createSuper(AccessTokenRequest);function AccessTokenRequest(options){var _this2;_classCallCheck(this,AccessTokenRequest);invariant(options.redirectUri,`\\`AccessTokenRequest\\` requires a valid \\`redirectUri\\` (it must also match the one used in the auth request). Example: ${Platform.select({web:'https://yourwebsite.com/redirect',default:'myapp://redirect'})}`);invariant(options.code,`\\`AccessTokenRequest\\` requires a valid authorization \\`code\\`. This is what's received from the authorization server after an auth request.`);_this2=_super2.call(this,options,GrantType.AuthorizationCode);_this2.code=options.code;_this2.redirectUri=options.redirectUri;return _this2;}_createClass(AccessTokenRequest,[{key:\"getQueryBody\",value:function getQueryBody(){var queryBody=_get(_getPrototypeOf(AccessTokenRequest.prototype),\"getQueryBody\",this).call(this);if(this.redirectUri){queryBody.redirect_uri=this.redirectUri;}if(this.code){queryBody.code=this.code;}return queryBody;}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{clientId:this.clientId,clientSecret:this.clientSecret,grantType:this.grantType,code:this.code,redirectUri:this.redirectUri,extraParams:this.extraParams,scopes:this.scopes};}}]);return AccessTokenRequest;}(TokenRequest);export var RefreshTokenRequest=function(_TokenRequest2){_inherits(RefreshTokenRequest,_TokenRequest2);var _super3=_createSuper(RefreshTokenRequest);function RefreshTokenRequest(options){var _this3;_classCallCheck(this,RefreshTokenRequest);invariant(options.refreshToken,`\\`RefreshTokenRequest\\` requires a valid \\`refreshToken\\`.`);_this3=_super3.call(this,options,GrantType.RefreshToken);_this3.refreshToken=options.refreshToken;return _this3;}_createClass(RefreshTokenRequest,[{key:\"getQueryBody\",value:function getQueryBody(){var queryBody=_get(_getPrototypeOf(RefreshTokenRequest.prototype),\"getQueryBody\",this).call(this);if(this.refreshToken){queryBody.refresh_token=this.refreshToken;}return queryBody;}},{key:\"getRequestConfig\",value:function getRequestConfig(){return{clientId:this.clientId,clientSecret:this.clientSecret,grantType:this.grantType,refreshToken:this.refreshToken,extraParams:this.extraParams,scopes:this.scopes};}}]);return RefreshTokenRequest;}(TokenRequest);export var RevokeTokenRequest=function(_Request2){_inherits(RevokeTokenRequest,_Request2);var _super4=_createSuper(RevokeTokenRequest);function RevokeTokenRequest(request){var _this4;_classCallCheck(this,RevokeTokenRequest);_this4=_super4.call(this,request);invariant(request.token,`\\`RevokeTokenRequest\\` requires a valid \\`token\\` to revoke.`);_this4.clientId=request.clientId;_this4.clientSecret=request.clientSecret;_this4.token=request.token;_this4.tokenTypeHint=request.tokenTypeHint;return _this4;}_createClass(RevokeTokenRequest,[{key:\"getHeaders\",value:function getHeaders(){var headers={'Content-Type':'application/x-www-form-urlencoded'};if(typeof this.clientSecret!=='undefined'&&this.clientId){var encodedClientId=encodeURIComponent(this.clientId);var encodedClientSecret=encodeURIComponent(this.clientSecret);var credentials=`${encodedClientId}:${encodedClientSecret}`;var basicAuth=Base64.encodeNoWrap(credentials);headers.Authorization=`Basic ${basicAuth}`;}return headers;}},{key:\"performAsync\",value:function(){var _performAsync3=_asyncToGenerator(function*(discovery){invariant(discovery.revocationEndpoint,`Cannot invoke \\`performAsync()\\` without a valid revocationEndpoint`);yield requestAsync(discovery.revocationEndpoint,{method:'POST',headers:this.getHeaders(),body:this.getQueryBody()});return true;});function performAsync(_x5){return _performAsync3.apply(this,arguments);}return performAsync;}()},{key:\"getRequestConfig\",value:function getRequestConfig(){return{clientId:this.clientId,clientSecret:this.clientSecret,token:this.token,tokenTypeHint:this.tokenTypeHint};}},{key:\"getQueryBody\",value:function getQueryBody(){var queryBody={token:this.token};if(this.tokenTypeHint){queryBody.token_type_hint=this.tokenTypeHint;}if(this.clientId){queryBody.client_id=this.clientId;}if(this.clientSecret){queryBody.client_secret=this.clientSecret;}return queryBody;}}]);return RevokeTokenRequest;}(Request);export function exchangeCodeAsync(config,discovery){var request=new AccessTokenRequest(config);return request.performAsync(discovery);}export function refreshAsync(config,discovery){var request=new RefreshTokenRequest(config);return request.performAsync(discovery);}export function revokeAsync(config,discovery){var request=new RevokeTokenRequest(config);return request.performAsync(discovery);}export function fetchUserInfoAsync(config,discovery){if(!discovery.userInfoEndpoint){throw new Error('User info endpoint is not defined in the service config discovery document');}return requestAsync(discovery.userInfoEndpoint,{headers:{'Content-Type':'application/x-www-form-urlencoded',Authorization:`Bearer ${config.accessToken}`},dataType:'json',method:'GET'});}","map":{"version":3,"names":["invariant","Platform","Base64","TokenError","requestAsync","GrantType","getCurrentTimeInSeconds","Math","floor","Date","now","TokenResponse","response","_response$tokenType","_response$issuedAt","_classCallCheck","accessToken","tokenType","expiresIn","refreshToken","scope","state","idToken","issuedAt","_createClass","key","value","applyResponseConfig","_response$accessToken","_ref","_response$tokenType2","_response$expiresIn","_response$refreshToke","_response$scope","_response$state","_response$idToken","_ref2","_response$issuedAt2","getRequestConfig","_refreshAsync","_asyncToGenerator","config","discovery","_response$refreshToke2","request","RefreshTokenRequest","_objectSpread","performAsync","json","refreshAsync","_x","_x2","apply","arguments","shouldRefresh","isTokenFresh","token","secondsMargin","length","undefined","fromQueryParams","params","access_token","refresh_token","id_token","token_type","expires_in","issued_at","Request","_performAsync","Error","_x3","getQueryBody","TokenRequest","_Request","_inherits","_super","_createSuper","grantType","_this","call","clientId","clientSecret","extraParams","scopes","getHeaders","headers","encodedClientId","encodeURIComponent","encodedClientSecret","credentials","basicAuth","encodeNoWrap","Authorization","_performAsync2","tokenEndpoint","dataType","method","body","_x4","queryBody","grant_type","client_id","join","extra","AccessTokenRequest","_TokenRequest","_super2","options","_this2","redirectUri","select","web","default","code","AuthorizationCode","_get","_getPrototypeOf","prototype","redirect_uri","_TokenRequest2","_super3","_this3","RefreshToken","RevokeTokenRequest","_Request2","_super4","_this4","tokenTypeHint","_performAsync3","revocationEndpoint","_x5","token_type_hint","client_secret","exchangeCodeAsync","revokeAsync","fetchUserInfoAsync","userInfoEndpoint"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/node_modules/expo-auth-session/src/TokenRequest.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { Platform } from 'react-native';\n\nimport * as Base64 from './Base64';\nimport * as ServiceConfig from './Discovery';\nimport { ResponseErrorConfig, TokenError } from './Errors';\nimport { Headers, requestAsync } from './Fetch';\nimport {\n  AccessTokenRequestConfig,\n  GrantType,\n  RefreshTokenRequestConfig,\n  RevokeTokenRequestConfig,\n  ServerTokenResponseConfig,\n  TokenRequestConfig,\n  TokenResponseConfig,\n  TokenType,\n  TokenTypeHint,\n} from './TokenRequest.types';\n\n/**\n * Returns the current time in seconds.\n */\nexport function getCurrentTimeInSeconds(): number {\n  return Math.floor(Date.now() / 1000);\n}\n\n/**\n * Token Response.\n *\n * [Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\n */\nexport class TokenResponse implements TokenResponseConfig {\n  /**\n   * Determines whether a token refresh request must be made to refresh the tokens\n   *\n   * @param token\n   * @param secondsMargin\n   */\n  static isTokenFresh(\n    token: Pick<TokenResponse, 'expiresIn' | 'issuedAt'>,\n    /**\n     * -10 minutes in seconds\n     */\n    secondsMargin: number = 60 * 10 * -1\n  ): boolean {\n    if (!token) {\n      return false;\n    }\n    if (token.expiresIn) {\n      const now = getCurrentTimeInSeconds();\n      return now < token.issuedAt + token.expiresIn + secondsMargin;\n    }\n    // if there is no expiration time but we have an access token, it is assumed to never expire\n    return true;\n  }\n  /**\n   * Creates a `TokenResponse` from query parameters returned from an `AuthRequest`.\n   *\n   * @param params\n   */\n  static fromQueryParams(params: Record<string, any>): TokenResponse {\n    return new TokenResponse({\n      accessToken: params.access_token,\n      refreshToken: params.refresh_token,\n      scope: params.scope,\n      state: params.state,\n      idToken: params.id_token,\n      tokenType: params.token_type,\n      expiresIn: params.expires_in,\n      issuedAt: params.issued_at,\n    });\n  }\n\n  accessToken: string;\n  tokenType: TokenType;\n  expiresIn?: number;\n  refreshToken?: string;\n  scope?: string;\n  state?: string;\n  idToken?: string;\n  issuedAt: number;\n\n  constructor(response: TokenResponseConfig) {\n    this.accessToken = response.accessToken;\n    this.tokenType = response.tokenType ?? 'bearer';\n    this.expiresIn = response.expiresIn;\n    this.refreshToken = response.refreshToken;\n    this.scope = response.scope;\n    this.state = response.state;\n    this.idToken = response.idToken;\n    this.issuedAt = response.issuedAt ?? getCurrentTimeInSeconds();\n  }\n\n  private applyResponseConfig(response: TokenResponseConfig) {\n    this.accessToken = response.accessToken ?? this.accessToken;\n    this.tokenType = response.tokenType ?? this.tokenType ?? 'bearer';\n    this.expiresIn = response.expiresIn ?? this.expiresIn;\n    this.refreshToken = response.refreshToken ?? this.refreshToken;\n    this.scope = response.scope ?? this.scope;\n    this.state = response.state ?? this.state;\n    this.idToken = response.idToken ?? this.idToken;\n    this.issuedAt = response.issuedAt ?? this.issuedAt ?? getCurrentTimeInSeconds();\n  }\n\n  getRequestConfig(): TokenResponseConfig {\n    return {\n      accessToken: this.accessToken,\n      idToken: this.idToken,\n      refreshToken: this.refreshToken,\n      scope: this.scope,\n      state: this.state,\n      tokenType: this.tokenType,\n      issuedAt: this.issuedAt,\n      expiresIn: this.expiresIn,\n    };\n  }\n\n  async refreshAsync(\n    config: Omit<TokenRequestConfig, 'grantType' | 'refreshToken'>,\n    discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>\n  ): Promise<TokenResponse> {\n    const request = new RefreshTokenRequest({\n      ...config,\n      refreshToken: this.refreshToken,\n    });\n    const response = await request.performAsync(discovery);\n    // Custom: reuse the refresh token if one wasn't returned\n    response.refreshToken = response.refreshToken ?? this.refreshToken;\n    const json = response.getRequestConfig();\n    this.applyResponseConfig(json);\n    return this;\n  }\n\n  shouldRefresh(): boolean {\n    // no refresh token available and token has expired\n    return !(TokenResponse.isTokenFresh(this) || !this.refreshToken);\n  }\n}\n\nclass Request<T, B> {\n  constructor(protected request: T) {}\n\n  async performAsync(discovery: ServiceConfig.DiscoveryDocument): Promise<B> {\n    throw new Error('performAsync must be extended');\n  }\n\n  getRequestConfig(): T {\n    throw new Error('getRequestConfig must be extended');\n  }\n\n  getQueryBody(): Record<string, string> {\n    throw new Error('getQueryBody must be extended');\n  }\n}\n\n/**\n * A generic token request.\n */\nclass TokenRequest<T extends TokenRequestConfig> extends Request<T, TokenResponse> {\n  readonly clientId: string;\n  readonly clientSecret?: string;\n  readonly scopes?: string[];\n  readonly extraParams?: Record<string, string>;\n\n  constructor(request, public grantType: GrantType) {\n    super(request);\n    this.clientId = request.clientId;\n    this.clientSecret = request.clientSecret;\n    this.extraParams = request.extraParams;\n    this.scopes = request.scopes;\n  }\n\n  getHeaders(): Headers {\n    const headers: Headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    if (typeof this.clientSecret !== 'undefined') {\n      // If client secret exists, it should be converted to base64\n      // https://tools.ietf.org/html/rfc6749#section-2.3.1\n      const encodedClientId = encodeURIComponent(this.clientId);\n      const encodedClientSecret = encodeURIComponent(this.clientSecret);\n      const credentials = `${encodedClientId}:${encodedClientSecret}`;\n      const basicAuth = Base64.encodeNoWrap(credentials);\n      headers.Authorization = `Basic ${basicAuth}`;\n    }\n\n    return headers;\n  }\n\n  async performAsync(discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>) {\n    // redirect URI must not be nil\n    invariant(\n      discovery.tokenEndpoint,\n      `Cannot invoke \\`performAsync()\\` without a valid tokenEndpoint`\n    );\n    const response = await requestAsync<ServerTokenResponseConfig | ResponseErrorConfig>(\n      discovery.tokenEndpoint,\n      {\n        dataType: 'json',\n        method: 'POST',\n        headers: this.getHeaders(),\n        body: this.getQueryBody(),\n      }\n    );\n\n    if ('error' in response) {\n      throw new TokenError(response);\n    }\n\n    return new TokenResponse({\n      accessToken: response.access_token,\n      tokenType: response.token_type,\n      expiresIn: response.expires_in,\n      refreshToken: response.refresh_token,\n      scope: response.scope,\n      idToken: response.id_token,\n      issuedAt: response.issued_at,\n    });\n  }\n\n  getQueryBody() {\n    const queryBody: Record<string, string> = {\n      grant_type: this.grantType,\n    };\n\n    if (!this.clientSecret) {\n      // Only add the client ID if client secret is not present, otherwise pass the client id with the secret in the request body.\n      queryBody.client_id = this.clientId;\n    }\n\n    if (this.scopes) {\n      queryBody.scope = this.scopes.join(' ');\n    }\n\n    if (this.extraParams) {\n      for (const extra in this.extraParams) {\n        if (extra in this.extraParams && !(extra in queryBody)) {\n          queryBody[extra] = this.extraParams[extra];\n        }\n      }\n    }\n    return queryBody;\n  }\n}\n\n/**\n * Access token request. Exchange an authorization code for a user access token.\n *\n * [Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\n */\nexport class AccessTokenRequest\n  extends TokenRequest<AccessTokenRequestConfig>\n  implements AccessTokenRequestConfig\n{\n  readonly code: string;\n  readonly redirectUri: string;\n\n  constructor(options: AccessTokenRequestConfig) {\n    invariant(\n      options.redirectUri,\n      `\\`AccessTokenRequest\\` requires a valid \\`redirectUri\\` (it must also match the one used in the auth request). Example: ${Platform.select(\n        {\n          web: 'https://yourwebsite.com/redirect',\n          default: 'myapp://redirect',\n        }\n      )}`\n    );\n\n    invariant(\n      options.code,\n      `\\`AccessTokenRequest\\` requires a valid authorization \\`code\\`. This is what's received from the authorization server after an auth request.`\n    );\n    super(options, GrantType.AuthorizationCode);\n    this.code = options.code;\n    this.redirectUri = options.redirectUri;\n  }\n\n  getQueryBody() {\n    const queryBody: Record<string, string> = super.getQueryBody();\n\n    if (this.redirectUri) {\n      queryBody.redirect_uri = this.redirectUri;\n    }\n\n    if (this.code) {\n      queryBody.code = this.code;\n    }\n\n    return queryBody;\n  }\n\n  getRequestConfig() {\n    return {\n      clientId: this.clientId,\n      clientSecret: this.clientSecret,\n      grantType: this.grantType,\n      code: this.code,\n      redirectUri: this.redirectUri,\n      extraParams: this.extraParams,\n      scopes: this.scopes,\n    };\n  }\n}\n\n/**\n * Refresh request.\n *\n * [Section 6](https://tools.ietf.org/html/rfc6749#section-6)\n */\nexport class RefreshTokenRequest\n  extends TokenRequest<RefreshTokenRequestConfig>\n  implements RefreshTokenRequestConfig\n{\n  readonly refreshToken?: string;\n\n  constructor(options: RefreshTokenRequestConfig) {\n    invariant(options.refreshToken, `\\`RefreshTokenRequest\\` requires a valid \\`refreshToken\\`.`);\n    super(options, GrantType.RefreshToken);\n    this.refreshToken = options.refreshToken;\n  }\n\n  getQueryBody() {\n    const queryBody = super.getQueryBody();\n\n    if (this.refreshToken) {\n      queryBody.refresh_token = this.refreshToken;\n    }\n\n    return queryBody;\n  }\n\n  getRequestConfig() {\n    return {\n      clientId: this.clientId,\n      clientSecret: this.clientSecret,\n      grantType: this.grantType,\n      refreshToken: this.refreshToken,\n      extraParams: this.extraParams,\n      scopes: this.scopes,\n    };\n  }\n}\n\n/**\n * Revocation request for a given token.\n *\n * [Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\n */\nexport class RevokeTokenRequest\n  extends Request<RevokeTokenRequestConfig, boolean>\n  implements RevokeTokenRequestConfig\n{\n  readonly clientId?: string;\n  readonly clientSecret?: string;\n  readonly token: string;\n  readonly tokenTypeHint?: TokenTypeHint;\n\n  constructor(request: RevokeTokenRequestConfig) {\n    super(request);\n    invariant(request.token, `\\`RevokeTokenRequest\\` requires a valid \\`token\\` to revoke.`);\n    this.clientId = request.clientId;\n    this.clientSecret = request.clientSecret;\n    this.token = request.token;\n    this.tokenTypeHint = request.tokenTypeHint;\n  }\n\n  getHeaders(): Headers {\n    const headers: Headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n    if (typeof this.clientSecret !== 'undefined' && this.clientId) {\n      // If client secret exists, it should be converted to base64\n      // https://tools.ietf.org/html/rfc6749#section-2.3.1\n      const encodedClientId = encodeURIComponent(this.clientId);\n      const encodedClientSecret = encodeURIComponent(this.clientSecret);\n      const credentials = `${encodedClientId}:${encodedClientSecret}`;\n      const basicAuth = Base64.encodeNoWrap(credentials);\n      headers.Authorization = `Basic ${basicAuth}`;\n    }\n\n    return headers;\n  }\n\n  /**\n   * Perform a token revocation request.\n   *\n   * @param discovery The `revocationEndpoint` for a provider.\n   */\n  async performAsync(discovery: Pick<ServiceConfig.DiscoveryDocument, 'revocationEndpoint'>) {\n    invariant(\n      discovery.revocationEndpoint,\n      `Cannot invoke \\`performAsync()\\` without a valid revocationEndpoint`\n    );\n    await requestAsync<boolean>(discovery.revocationEndpoint, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: this.getQueryBody(),\n    });\n\n    return true;\n  }\n\n  getRequestConfig() {\n    return {\n      clientId: this.clientId,\n      clientSecret: this.clientSecret,\n      token: this.token,\n      tokenTypeHint: this.tokenTypeHint,\n    };\n  }\n\n  getQueryBody(): Record<string, string> {\n    const queryBody: Record<string, string> = { token: this.token };\n    if (this.tokenTypeHint) {\n      queryBody.token_type_hint = this.tokenTypeHint;\n    }\n    // Include client creds https://tools.ietf.org/html/rfc6749#section-2.3.1\n    if (this.clientId) {\n      queryBody.client_id = this.clientId;\n    }\n    if (this.clientSecret) {\n      queryBody.client_secret = this.clientSecret;\n    }\n    return queryBody;\n  }\n}\n\n// @needsAudit\n/**\n * Exchange an authorization code for an access token that can be used to get data from the provider.\n *\n * @param config Configuration used to exchange the code for a token.\n * @param discovery The `tokenEndpoint` for a provider.\n * @return Returns a discovery document with a valid `tokenEndpoint` URL.\n */\nexport function exchangeCodeAsync(\n  config: AccessTokenRequestConfig,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>\n): Promise<TokenResponse> {\n  const request = new AccessTokenRequest(config);\n  return request.performAsync(discovery);\n}\n\n// @needsAudit\n/**\n * Refresh an access token.\n * - If the provider didn't return a `refresh_token` then the access token may not be refreshed.\n * - If the provider didn't return a `expires_in` then it's assumed that the token does not expire.\n * - Determine if a token needs to be refreshed via `TokenResponse.isTokenFresh()` or `shouldRefresh()` on an instance of `TokenResponse`.\n *\n * @see [Section 6](https://tools.ietf.org/html/rfc6749#section-6).\n *\n * @param config Configuration used to refresh the given access token.\n * @param discovery The `tokenEndpoint` for a provider.\n * @return Returns a discovery document with a valid `tokenEndpoint` URL.\n */\nexport function refreshAsync(\n  config: RefreshTokenRequestConfig,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'tokenEndpoint'>\n): Promise<TokenResponse> {\n  const request = new RefreshTokenRequest(config);\n  return request.performAsync(discovery);\n}\n\n// @needsAudit\n/**\n * Revoke a token with a provider. This makes the token unusable, effectively requiring the user to login again.\n *\n * @param config Configuration used to revoke a refresh or access token.\n * @param discovery The `revocationEndpoint` for a provider.\n * @return Returns a discovery document with a valid `revocationEndpoint` URL. Many providers do not support this feature.\n */\nexport function revokeAsync(\n  config: RevokeTokenRequestConfig,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'revocationEndpoint'>\n): Promise<boolean> {\n  const request = new RevokeTokenRequest(config);\n  return request.performAsync(discovery);\n}\n\n/**\n * Fetch generic user info from the provider's OpenID Connect `userInfoEndpoint` (if supported).\n *\n * @see [UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).\n *\n * @param config The `accessToken` for a user, returned from a code exchange or auth request.\n * @param discovery The `userInfoEndpoint` for a provider.\n */\nexport function fetchUserInfoAsync(\n  config: Pick<TokenResponse, 'accessToken'>,\n  discovery: Pick<ServiceConfig.DiscoveryDocument, 'userInfoEndpoint'>\n): Promise<Record<string, any>> {\n  if (!discovery.userInfoEndpoint) {\n    throw new Error('User info endpoint is not defined in the service config discovery document');\n  }\n  return requestAsync<Record<string, any>>(discovery.userInfoEndpoint, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Bearer ${config.accessToken}`,\n    },\n    dataType: 'json',\n    method: 'GET',\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}