{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useRef}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Button from\"react-native-web/dist/exports/Button\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Picker}from'@react-native-picker/picker';import spanishAdjectiveData from\"./data/adjectives-spanish.json\";import spanishAdverbData from\"./data/adverbs-spanish.json\";import spanishEmojiData from\"./data/emoji-spanish.json\";import spanishNounData from\"./data/nouns-spanish.json\";import spanishQuizData from\"./data/spanishquiz.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var quizOptions=[{value:'Select',label:'Select'},{value:'Subjunctive',label:'Subjunctive'},{value:'Conjugation',label:'Conjugation'},{value:'Imperative',label:'Imperative'},{value:'emoji',label:'Emoji'},{value:'noun',label:'Noun'},{value:'adjective',label:'Adjective'},{value:'adverb',label:'Adverb'}];var QuizComponent=function QuizComponent(_ref){var name=_ref.name,email=_ref.email;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),correctAnswer=_useState2[0],setCorrectAnswer=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedAnswer=_useState4[0],setSelectedAnswer=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAnswersVisibility=_useState6[0],setShowAnswersVisibility=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),answerCorrectness=_useState8[0],setAnswerCorrectness=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,1),correctSpanish=_useState10[0];var inputRefs=useRef([]);var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),answersChecked=_useState12[0],setAnswersChecked=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),userAnswers=_useState14[0],setUserAnswers=_useState14[1];useEffect(function(){setUserAnswers(formattedQuestions.map(function(){return\"\";}));},[formattedQuestions]);var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),showQuiz=_useState16[0],setShowQuiz=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),hasSelected=_useState18[0],setHasSelected=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),quizQuestion=_useState20[0],setQuizQuestion=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),quizAnswer=_useState22[0],setQuizAnswer=_useState22[1];var _useState23=useState('Select'),_useState24=_slicedToArray(_useState23,2),selectedOption=_useState24[0],setSelectedOption=_useState24[1];var setLanguage=\"spanish\";var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),loading=_useState26[0],setLoading=_useState26[1];var _useState27=useState({}),_useState28=_slicedToArray(_useState27,2),feedback=_useState28[0],setFeedback=_useState28[1];var _useState29=useState(null),_useState30=_slicedToArray(_useState29,2),quizData=_useState30[0],setQuizData=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),showAnswers=_useState32[0],setShowAnswers=_useState32[1];var _useState33=useState([]),_useState34=_slicedToArray(_useState33,2),formattedQuestions=_useState34[0],setFormattedQuestions=_useState34[1];var _useState35=useState('example@email.com'),_useState36=_slicedToArray(_useState35,2),userEmail=_useState36[0],setUserEmail=_useState36[1];var _useState37=useState('beginner'),_useState38=_slicedToArray(_useState37,2),difficulty=_useState38[0],setDifficulty=_useState38[1];var _useState39=useState('Subjunctive'),_useState40=_slicedToArray(_useState39,2),quizType=_useState40[0],setQuizType=_useState40[1];var handleStartQuiz=function handleStartQuiz(){setShowAnswersVisibility(false);setAnswersChecked(false);if(!spanishQuizData[difficulty]||!spanishQuizData[difficulty][quizType]){alert(\"No quiz data available for the selected difficulty and type.\");return;}var availableSentences=spanishQuizData[difficulty][quizType];if(availableSentences.length<5){alert(\"Not enough sentences available for the selected difficulty and type.\");return;}var selectedSentences=[];while(selectedSentences.length<5){var randomIndex=Math.floor(Math.random()*availableSentences.length);if(!selectedSentences.includes(availableSentences[randomIndex])){selectedSentences.push(availableSentences[randomIndex]);}}setFormattedQuestions(selectedSentences);setAnswerCorrectness([]);};useEffect(function(){var fetchUserPreferences=function(){var _ref2=_asyncToGenerator(function*(){try{if(!email)return;var response=yield fetch(`https://skeba.info/netlify/get-biography.php?email=${email}`);var data=yield response.json();if(data){setDifficulty(data.difficulty||\"beginner\");console.log(data.difficulty);}}catch(error){console.error('Error fetching user preferences:',error);}});return function fetchUserPreferences(){return _ref2.apply(this,arguments);};}();fetchUserPreferences();},[email]);var generateQuizAdj=function generateQuizAdj(){console.log(selectedOption);var dataGroup;if(selectedOption===\"adjective\"){dataGroup=spanishAdjectiveData[difficulty];}if(selectedOption===\"adverb\"){dataGroup=spanishAdverbData[difficulty];}if(selectedOption===\"emoji\"){dataGroup=spanishEmojiData[difficulty];}if(selectedOption===\"noun\"){dataGroup=spanishNounData[difficulty];}if(!dataGroup||dataGroup.length===0){alert(\"No quiz data available for the selected difficulty and type.\");return;}var randomDataIndex=Math.floor(Math.random()*dataGroup.length);var data=dataGroup[randomDataIndex];var pairs=Object.entries(data);var randomIndex=Math.floor(Math.random()*pairs.length);var _pairs$randomIndex=_slicedToArray(pairs[randomIndex],2),correctSpanish=_pairs$randomIndex[0],correctEnglish=_pairs$randomIndex[1];pairs.splice(randomIndex,1);var distractors=[];for(var i=0;i<3;i++){var distractorIndex=Math.floor(Math.random()*pairs.length);distractors.push(pairs[distractorIndex][0]);pairs.splice(distractorIndex,1);}var options=[correctSpanish].concat(distractors);for(var _i=options.length-1;_i>0;_i--){var j=Math.floor(Math.random()*(_i+1));var _ref3=[options[j],options[_i]];options[_i]=_ref3[0];options[j]=_ref3[1];}console.log(\"correct\",correctEnglish);console.log(\"correct\",correctSpanish);console.log(options);setCorrectAnswer(correctSpanish);var newQuest=correctEnglish;var newOptions=options;setQuizQuestion(newQuest);setQuizAnswer(newOptions);console.log(\"question\",setCorrectAnswer);console.log(\"answer\",newOptions);setShowQuiz(true);};var handleCheckAnswers=function handleCheckAnswers(){if(answersChecked){setAnswerCorrectness([]);}else{var correctnessArray=formattedQuestions.map(function(question,index){var userAnswer=(userAnswers[index]||\"\").toLowerCase();var correctAnswer=(question.answer||\"\").toLowerCase();return userAnswer===correctAnswer;});setAnswerCorrectness(correctnessArray);}setAnswersChecked(function(prevState){return!prevState;});};var renderAdjectiveQuiz=function renderAdjectiveQuiz(){if(!quizQuestion)return null;console.log(\"correctspanish\",correctSpanish);var isCorrect=function isCorrect(option){return hasSelected&&option===selectedAnswer&&option===correctAnswer;};var isIncorrect=function isIncorrect(option){return hasSelected&&option===selectedAnswer&&option!==correctAnswer;};return _jsxs(View,{style:{marginVertical:20},children:[_jsx(Text,{style:{fontSize:18,fontWeight:'bold'},children:quizQuestion}),_jsx(FlatList,{data:quizAnswer,renderItem:function renderItem(_ref4){var item=_ref4.item;return _jsx(TouchableOpacity,{onPress:function onPress(){setSelectedAnswer(item);setHasSelected(true);console.log(\"Selected:\",item);console.log(\"Correct:\",correctSpanish);},style:{padding:10,backgroundColor:isCorrect(item)?'green':isIncorrect(item)?'red':'transparent'},children:_jsx(Text,{style:{fontSize:16},children:item})});},keyExtractor:function keyExtractor(item,index){return index.toString();}})]});};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.header,children:\"Quiz Options\"}),_jsx(Picker,{selectedValue:selectedOption,onValueChange:function onValueChange(itemValue){setSelectedOption(itemValue);setQuizType(itemValue);setFormattedQuestions([]);},style:_objectSpread(_objectSpread({},styles.picker),{},{height:50,width:200,backgroundColor:'#f8f8f8'}),children:quizOptions.map(function(option){return _jsx(Picker.Item,{label:option.label,value:option.value,style:styles.pickerItem},option.value);})}),(selectedOption===\"adjective\"||selectedOption===\"adverb\"||selectedOption===\"noun\"||selectedOption===\"emoji\")&&_jsxs(View,{children:[_jsx(Button,{title:\"Generate Quiz\",onPress:generateQuizAdj}),showQuiz&&renderAdjectiveQuiz()]}),(selectedOption===\"Conjugation\"||selectedOption===\"Imperative\"||selectedOption===\"Subjunctive\")&&_jsx(Button,{title:\"Start Quiz\",onPress:handleStartQuiz}),formattedQuestions.map(function(question,index){var _question$sentence$sp=question.sentence.split(/[\\(\\)]/),_question$sentence$sp2=_slicedToArray(_question$sentence$sp,3),start=_question$sentence$sp2[0],middle=_question$sentence$sp2[1],end=_question$sentence$sp2[2];return _jsxs(View,{style:{flexDirection:'column',alignItems:'flex-start',marginVertical:5},children:[_jsxs(View,{style:{flexDirection:'row',alignItems:'center'},children:[_jsx(Text,{children:start}),_jsx(TextInput,{ref:function ref(el){return inputRefs.current[index]=el;},value:userAnswers[index]||\"\",onChangeText:function onChangeText(text){var updatedAnswers=_toConsumableArray(userAnswers);updatedAnswers[index]=text;setUserAnswers(updatedAnswers);},style:{borderWidth:1,borderColor:'gray',paddingHorizontal:5,marginHorizontal:5,backgroundColor:answerCorrectness[index]===true?'green':answerCorrectness[index]===false?'red':'white'},placeholder:middle}),_jsx(Text,{children:end})]}),showAnswersVisibility&&_jsxs(Text,{style:{marginTop:5},children:[\"Answer: \",question.answer.charAt(0).toUpperCase()+question.answer.slice(1)]})]},index);}),formattedQuestions.length>0&&_jsxs(View,{style:{flexDirection:'row',justifyContent:'space-between',marginTop:10},children:[_jsx(View,{style:{marginRight:5},children:_jsx(Button,{title:answersChecked?\"Reset Answers\":\"Check Answers\",onPress:handleCheckAnswers})}),_jsx(Button,{title:showAnswersVisibility?\"Hide Answers\":\"Show Answers\",onPress:function onPress(){return setShowAnswersVisibility(function(prevState){return!prevState;});}})]})]});};var styles=StyleSheet.create({container:{flex:1,padding:20,backgroundColor:'#f5f5f5',alignItems:'center'},header:{fontSize:28,fontWeight:'bold',color:'#333',marginBottom:20},picker:{width:250,height:50,borderColor:'#ccc',borderWidth:1,borderRadius:5,marginBottom:20,backgroundColor:'#f8f8f8'},pickerItem:{fontSize:18},input:{width:200,height:40,borderColor:'#ccc',borderWidth:1,borderRadius:5,paddingHorizontal:10,marginBottom:20,fontSize:16},listItem:{padding:10,marginVertical:5,borderWidth:1,borderRadius:5,borderColor:'#ddd'},correctAnswer:{backgroundColor:'green'},incorrectAnswer:{backgroundColor:'red'},Button:{backgroundColor:'red'}});export default QuizComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","StyleSheet","Button","TextInput","FlatList","TouchableOpacity","Picker","spanishAdjectiveData","spanishAdverbData","spanishEmojiData","spanishNounData","spanishQuizData","jsx","_jsx","jsxs","_jsxs","quizOptions","value","label","QuizComponent","_ref","name","email","_useState","_useState2","_slicedToArray","correctAnswer","setCorrectAnswer","_useState3","_useState4","selectedAnswer","setSelectedAnswer","_useState5","_useState6","showAnswersVisibility","setShowAnswersVisibility","_useState7","_useState8","answerCorrectness","setAnswerCorrectness","_useState9","_useState10","correctSpanish","inputRefs","_useState11","_useState12","answersChecked","setAnswersChecked","_useState13","_useState14","userAnswers","setUserAnswers","formattedQuestions","map","_useState15","_useState16","showQuiz","setShowQuiz","_useState17","_useState18","hasSelected","setHasSelected","_useState19","_useState20","quizQuestion","setQuizQuestion","_useState21","_useState22","quizAnswer","setQuizAnswer","_useState23","_useState24","selectedOption","setSelectedOption","setLanguage","_useState25","_useState26","loading","setLoading","_useState27","_useState28","feedback","setFeedback","_useState29","_useState30","quizData","setQuizData","_useState31","_useState32","showAnswers","setShowAnswers","_useState33","_useState34","setFormattedQuestions","_useState35","_useState36","userEmail","setUserEmail","_useState37","_useState38","difficulty","setDifficulty","_useState39","_useState40","quizType","setQuizType","handleStartQuiz","alert","availableSentences","length","selectedSentences","randomIndex","Math","floor","random","includes","push","fetchUserPreferences","_ref2","_asyncToGenerator","response","fetch","data","json","console","log","error","apply","arguments","generateQuizAdj","dataGroup","randomDataIndex","pairs","Object","entries","_pairs$randomIndex","correctEnglish","splice","distractors","i","distractorIndex","options","concat","j","_ref3","newQuest","newOptions","handleCheckAnswers","correctnessArray","question","index","userAnswer","toLowerCase","answer","prevState","renderAdjectiveQuiz","isCorrect","option","isIncorrect","style","marginVertical","children","fontSize","fontWeight","renderItem","_ref4","item","onPress","padding","backgroundColor","keyExtractor","toString","styles","container","header","selectedValue","onValueChange","itemValue","_objectSpread","picker","height","width","Item","pickerItem","title","_question$sentence$sp","sentence","split","_question$sentence$sp2","start","middle","end","flexDirection","alignItems","ref","el","current","onChangeText","text","updatedAnswers","_toConsumableArray","borderWidth","borderColor","paddingHorizontal","marginHorizontal","placeholder","marginTop","charAt","toUpperCase","slice","justifyContent","marginRight","create","flex","color","marginBottom","borderRadius","input","listItem","incorrectAnswer"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/QuizComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Button, TextInput,  FlatList, TouchableOpacity  } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport spanishAdjectiveData from './data/adjectives-spanish.json'; // Import the data from the adjectives-spanish.js\nimport spanishAdverbData from './data/adverbs-spanish.json'; // Import the data from the adjectives-spanish.js\nimport spanishEmojiData from './data/emoji-spanish.json'; // Import the data from the adjectives-spanish.js\nimport spanishNounData from './data/nouns-spanish.json'; // Import the data from the adjectives-spanish.js\n\nimport spanishQuizData from './data/spanishquiz.json';\n\nconst quizOptions = [\n    { value: 'Select', label: 'Select' },\n    { value: 'Subjunctive', label: 'Subjunctive' },\n    { value: 'Conjugation', label: 'Conjugation' },\n    { value: 'Imperative', label: 'Imperative' },\n    { value: 'emoji', label: 'Emoji' },\n    { value: 'noun', label: 'Noun' },\n    { value: 'adjective', label: 'Adjective' },\n    { value: 'adverb', label: 'Adverb' }\n];\n\nconst QuizComponent = ({ name, email }) => {\n    const [correctAnswer, setCorrectAnswer] = useState(null);\n\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\n    const [showAnswersVisibility, setShowAnswersVisibility] = useState(false);\nconst [answerCorrectness, setAnswerCorrectness] = useState([]);\n const [correctSpanish] = useState(null);\nconst inputRefs = useRef([]);\nconst [answersChecked, setAnswersChecked] = useState(false);\nconst [userAnswers, setUserAnswers] = useState([]);\nuseEffect(() => {\n    setUserAnswers(formattedQuestions.map(() => \"\"));\n}, [formattedQuestions]);\nconst [showQuiz, setShowQuiz] = useState(false);\nconst [hasSelected, setHasSelected] = useState(false);\nconst [quizQuestion, setQuizQuestion] = useState(\"\");\nconst [quizAnswer, setQuizAnswer] = useState([]);     const [selectedOption, setSelectedOption] = useState('Select');\n     const setLanguage = \"spanish\";\n    const [loading, setLoading] = useState(false);\n    const [feedback, setFeedback] = useState({});\n    const [quizData, setQuizData] = useState(null);\n    const [showAnswers, setShowAnswers] = useState(false);\n  const [formattedQuestions, setFormattedQuestions] = useState([]);\n    const [userEmail, setUserEmail] = useState('example@email.com'); // Dummy for now\n    const [difficulty, setDifficulty] = useState('beginner'); // Dummy for now, you may want to change this\nconst [quizType, setQuizType] = useState('Subjunctive');\n\n\nconst handleStartQuiz = () => {\n    setShowAnswersVisibility(false);\nsetAnswersChecked(false);\n\n    if (!spanishQuizData[difficulty] || !spanishQuizData[difficulty][quizType]) {\n        alert(\"No quiz data available for the selected difficulty and type.\");\n        return;\n    }\n    \n    const availableSentences = spanishQuizData[difficulty][quizType];\n    if (availableSentences.length < 5) {\n        alert(\"Not enough sentences available for the selected difficulty and type.\");\n        return;\n    }\n    \n    const selectedSentences = [];\n    while (selectedSentences.length < 5) {\n        const randomIndex = Math.floor(Math.random() * availableSentences.length);\n        if (!selectedSentences.includes(availableSentences[randomIndex])) {\n            selectedSentences.push(availableSentences[randomIndex]);\n        }\n    }\n    \n    setFormattedQuestions(selectedSentences);\n    setAnswerCorrectness([]);\n};\n\n    useEffect(() => {\n        const fetchUserPreferences = async () => {\n            try {\n                if (!email) return; // Use email directly\n                const response = await fetch(`https://skeba.info/netlify/get-biography.php?email=${email}`);\n                const data = await response.json();\n                if (data) {\n        \n                    setDifficulty(data.difficulty || \"beginner\");\n                \n                    console.log(data.difficulty);\n                }\n            } catch (error) {\n                console.error('Error fetching user preferences:', error);\n            }\n        };\n\n        fetchUserPreferences();\n    }, [email]);\nconst generateQuizAdj = () => {\nconsole.log(selectedOption);\nlet dataGroup\nif (selectedOption === \"adjective\") { // Use '===' for strict equality checking\n    dataGroup = spanishAdjectiveData[difficulty];\n}\nif (selectedOption === \"adverb\") { // Use '===' for strict equality checking\n    dataGroup = spanishAdverbData[difficulty];\n}\nif (selectedOption === \"emoji\") { // Use '===' for strict equality checking\n    dataGroup = spanishEmojiData[difficulty];\n}\nif (selectedOption === \"noun\") { // Use '===' for strict equality checking\n    dataGroup = spanishNounData[difficulty];\n}\n    if (!dataGroup || dataGroup.length === 0) {\n        alert(\"No quiz data available for the selected difficulty and type.\");\n        return;\n    }\n\n  // Randomly select an object from the dataGroup\n    const randomDataIndex = Math.floor(Math.random() * dataGroup.length);\n    const data = dataGroup[randomDataIndex];\n\n    // Convert data to array of [spanish, english] pairs\n    const pairs = Object.entries(data);\n\n    // Randomly select a pair for the correct answer\n    const randomIndex = Math.floor(Math.random() * pairs.length);\n    const [correctSpanish, correctEnglish] = pairs[randomIndex];\n\n    // Remove the correct answer from the list\n    pairs.splice(randomIndex, 1);\n\n    // Randomly select 3 distractors\n    const distractors = [];\n    for (let i = 0; i < 3; i++) {\n        const distractorIndex = Math.floor(Math.random() * pairs.length);\n        distractors.push(pairs[distractorIndex][0]);\n        pairs.splice(distractorIndex, 1);\n    }\n\n    // Create an array with the correct answer and the distractors\n    const options = [correctSpanish, ...distractors];\n\n    // Shuffle the options\n    for (let i = options.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [options[i], options[j]] = [options[j], options[i]];\n    }\nconsole.log(\"correct\",correctEnglish);\nconsole.log(\"correct\",correctSpanish);\nconsole.log(options);\nsetCorrectAnswer(correctSpanish);\n    // Convert to constants\n    const newQuest = correctEnglish;\n    const newOptions = options;\nsetQuizQuestion(newQuest);\nsetQuizAnswer(newOptions);\nconsole.log(\"question\", setCorrectAnswer);\n   console.log(\"answer\",newOptions);\nsetShowQuiz(true);\n};  \nconst handleCheckAnswers = () => {\n    if (answersChecked) {\n        setAnswerCorrectness([]); // Clear the answer correctness array\n    } else {\n        const correctnessArray = formattedQuestions.map((question, index) => {\n            const userAnswer = (userAnswers[index] || \"\").toLowerCase();\n            const correctAnswer = (question.answer || \"\").toLowerCase();\n            return userAnswer === correctAnswer;\n        });\n        setAnswerCorrectness(correctnessArray);\n    }\n    setAnswersChecked(prevState => !prevState); // Toggle the answersChecked state\n};\n\nconst renderAdjectiveQuiz = () => {\n\n    if (!quizQuestion) return null;\nconsole.log(\"correctspanish\",correctSpanish);\n   const isCorrect = (option) => hasSelected && option === selectedAnswer && option === correctAnswer;\nconst isIncorrect = (option) => hasSelected && option === selectedAnswer && option !== correctAnswer;\n\n\n    return (\n        <View style={{ marginVertical: 20 }}>\n            <Text style={{ fontSize: 18, fontWeight: 'bold' }}>\n                {quizQuestion}\n            </Text>\n            <FlatList\n                data={quizAnswer}\n                renderItem={({ item }) => (\n                    <TouchableOpacity \n                        onPress={() => {\n                            setSelectedAnswer(item);\n                            setHasSelected(true);\n                                    console.log(\"Selected:\", item);\n        console.log(\"Correct:\", correctSpanish);\n                        }}\n                        style={{\n                            padding: 10,\n                            backgroundColor: isCorrect(item) ? 'green' : (isIncorrect(item) ? 'red' : 'transparent')\n                        }}\n                    >\n                        <Text style={{ fontSize: 16 }}>\n                            {item}\n                        </Text>\n                    </TouchableOpacity>\n                )}\n                keyExtractor={(item, index) => index.toString()}\n            />\n        </View>\n    );\n};\n\n\n\n    return (\n<View style={styles.container}>\n\n\n\n            <Text style={styles.header}>Quiz Options</Text>\n          <Picker\n    selectedValue={selectedOption}\n    onValueChange={(itemValue) => {\n        setSelectedOption(itemValue);\n        setQuizType(itemValue);\n                setFormattedQuestions([]); // Reset the formattedQuestions state when a new option is selected\n\n    }}\n    style={{ ...styles.picker, height: 50, width: 200, backgroundColor: '#f8f8f8' }}\n>\n    {quizOptions.map(option => (\n        <Picker.Item \n            key={option.value} \n            label={option.label} \n            value={option.value} \n            style={styles.pickerItem} \n        />\n    ))}\n</Picker>\n{(selectedOption === \"adjective\" || selectedOption === \"adverb\" || selectedOption === \"noun\" || selectedOption === \"emoji\") && (\n    <View>\n        <Button title=\"Generate Quiz\" onPress={generateQuizAdj} />\n        {showQuiz && renderAdjectiveQuiz()}\n    </View>\n)}\n            {(selectedOption === \"Conjugation\" || selectedOption === \"Imperative\" || selectedOption === \"Subjunctive\") && (\n         <Button title=\"Start Quiz\" onPress={handleStartQuiz} />\n\n\n            )}\n         \n\n\n   {formattedQuestions.map((question, index) => {\n                const [start, middle, end] = question.sentence.split(/[\\(\\)]/);\n                return (\n                    <View key={index} style={{ flexDirection: 'column', alignItems: 'flex-start', marginVertical: 5 }}>\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                            <Text>{start}</Text>\n                            <TextInput\n                                ref={el => inputRefs.current[index] = el}\n                                value={userAnswers[index] || \"\"} // Ensure value is never undefined or null\n                                onChangeText={(text) => {\n                                    const updatedAnswers = [...userAnswers];\n                                    updatedAnswers[index] = text;\n                                    setUserAnswers(updatedAnswers);\n                                }}\n                                style={{ \n                                    borderWidth: 1, \n                                    borderColor: 'gray', \n                                    paddingHorizontal: 5, \n                                    marginHorizontal: 5,\n                                    backgroundColor: answerCorrectness[index] === true ? 'green' : (answerCorrectness[index] === false ? 'red' : 'white')\n                                }}\n                                placeholder={middle}\n                            />\n                            <Text>{end}</Text>\n                        </View>\n                        {showAnswersVisibility && <Text style={{ marginTop: 5 }}>Answer: {question.answer.charAt(0).toUpperCase() + question.answer.slice(1)}</Text>}\n                    </View>\n                );\n            })}\n\n            {formattedQuestions.length > 0 && (\n                <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10 }}>\n                    <View style={{ marginRight: 5, }}>\n                        <Button title={answersChecked ? \"Reset Answers\" : \"Check Answers\"} onPress={handleCheckAnswers} />\n                    </View>\n                    <Button title={showAnswersVisibility ? \"Hide Answers\" : \"Show Answers\"} onPress={() => setShowAnswersVisibility(prevState => !prevState)} />\n                </View>\n            )}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#f5f5f5',\n        alignItems: 'center',\n    },\n    header: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 20,\n    },\n    picker: {\n        width: 250,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        marginBottom: 20,\n        backgroundColor: '#f8f8f8',\n    },\n    pickerItem: {\n        fontSize: 18,\n    },\n    input: {\n        width: 200,\n        height: 40,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginBottom: 20,\n        fontSize: 16,\n    },\n    listItem: {\n        padding: 10,\n        marginVertical: 5,\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: '#ddd',\n    },\n    correctAnswer: {\n        backgroundColor: 'green',\n    },\n    incorrectAnswer: {\n        backgroundColor: 'red',\n    },\n    Button: {\n        backgroundColor: 'red',\n    },\n});\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}