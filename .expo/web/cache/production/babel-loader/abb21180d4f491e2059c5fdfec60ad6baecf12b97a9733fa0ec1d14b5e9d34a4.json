{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Button from\"react-native-web/dist/exports/Button\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import dictionaryData from\"./data/spanishdictionary.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dictionary=function Dictionary(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),difficulty=_useState2[0],setDifficulty=_useState2[1];var _useState3=useState(''),word=_useState3.word;var _useState4=useState(word||''),_useState5=_slicedToArray(_useState4,2),searchTerm=_useState5[0],setSearchTerm=_useState5[1];var _useState6=useState(''),_useState7=_slicedToArray(_useState6,2),searchResult=_useState7[0],setSearchResult=_useState7[1];var _useState8=useState(null),_useState9=_slicedToArray(_useState8,2),displayedVerb=_useState9[0],setDisplayedVerb=_useState9[1];useEffect(function(){if(word){handleSearch();}},[word]);var formMapping={\"form_1s\":\"Yo\",\"form_2s\":\"Tu\",\"form_3s\":\"Ella\",\"form_1p\":\"Nosotros\",\"form_2p\":\"Vosotros\",\"form_3p\":\"Ellos\"};var tenseDescriptions={\"Preterite\":\"(simple past)\",\"Present\":\"(present tense)\",\"Future\":\"(future tense)\",\"Imperfect\":\"(imperfect past)\",\"Conditional\":\"(possibility)\",\"Present Perfect\":\"(have)\",\"Future Perfect\":\"(will have)\",\"Past Perfect\":\"(had)\",\"Conditional Perfect\":\"(would have)\"};var renderTenseDescription=function renderTenseDescription(tense){var description=tenseDescriptions[tense];return description?_jsx(Text,{style:{fontSize:14,marginTop:10},children:description}):null;};var formatTense=function formatTense(tense){return tense.split('_').map(function(word){return word.charAt(0).toUpperCase()+word.slice(1);}).join(' ');};function formatGroupName(groupName){return groupName.split('_').map(function(word){return word.charAt(0).toUpperCase()+word.slice(1);}).join(' ');}var renderConjugationGroup=function renderConjugationGroup(groupName,conjugations){var tensesToExcludeForBeginners=[\"Conditional Perfect\",\"Future Perfect\",\"Past Perfect\",\"Present Perfect\"];return _jsxs(View,{children:[_jsx(Text,{style:styles.subHeader,children:formatGroupName(groupName)}),Object.entries(conjugations).map(function(_ref){var _ref2=_slicedToArray(_ref,2),tense=_ref2[0],forms=_ref2[1];if(difficulty===\"beginner\"&&tensesToExcludeForBeginners.includes(formatTense(tense))){return null;}return _jsxs(View,{style:styles.verbBlock,children:[_jsxs(Text,{style:styles.tenseHeader,children:[formatTense(tense),renderTenseDescription(formatTense(tense))]}),_jsx(View,{style:styles.listContainer,children:Object.entries(forms).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),form=_ref4[0],verb=_ref4[1];return _jsxs(Text,{style:styles.listItem,children:[formMapping[form],\" \",verb]},form);})})]},tense);})]},groupName);};var allowedTensesForBeginner={\"indicative\":[\"present\",\"preterite\",\"imperfect\",\"conditional\",\"future\"]};var renderConjugations=function renderConjugations(verbData){return _jsx(View,{children:Object.entries(verbData.useage).map(function(_ref5){var _ref6=_slicedToArray(_ref5,2),groupName=_ref6[0],conjugations=_ref6[1];var _groupName$split=groupName.split(\"_\"),_groupName$split2=_slicedToArray(_groupName$split,2),mainCategory=_groupName$split2[0],subCategory=_groupName$split2[1];if(difficulty===\"beginner\"){if(!allowedTensesForBeginner[mainCategory]||subCategory&&!allowedTensesForBeginner[mainCategory].includes(subCategory)){return null;}}return renderConjugationGroup(groupName,conjugations);})});};var handleSearch=function handleSearch(){var _verbData$meta;var lowercaseSearchTerm=searchTerm.toLowerCase();var verbData=dictionaryData[lowercaseSearchTerm];var infinitiveEnglish=(verbData==null?void 0:(_verbData$meta=verbData.meta)==null?void 0:_verbData$meta.infinitive_english)||\"no word found\";setSearchResult(infinitiveEnglish);setDisplayedVerb(verbData);};return _jsx(ScrollView,{style:styles.container,children:_jsxs(View,{style:styles.centered,children:[_jsx(Text,{style:styles.header,children:\"Verb Conjugation Dictionary\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Enter a word...\",value:searchTerm,onChangeText:setSearchTerm}),_jsx(View,{style:styles.buttonContainer,children:_jsx(Button,{title:\"Submit\",onPress:handleSearch,color:\"#007AFF\"})}),_jsx(Text,{style:styles.boldText,children:searchResult}),displayedVerb&&renderConjugations(displayedVerb)]})});};export default Dictionary;var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#f5f5f5'},centered:{flex:1,alignItems:'center',justifyContent:'center',padding:20},header:{fontSize:26,fontWeight:'bold',color:'#333',textAlign:'center',marginBottom:20},input:{width:280,height:50,borderColor:'#ccc',borderWidth:1,borderRadius:8,backgroundColor:'white',marginBottom:20,paddingHorizontal:10,fontSize:16},buttonContainer:{width:200,marginBottom:20},subHeader:{fontSize:20,fontWeight:'bold',color:'#555',marginBottom:10},tenseHeader:{fontSize:18,fontWeight:'bold',color:'#666',marginBottom:5},boldText:{fontWeight:'bold',fontSize:18,color:'#444',marginVertical:10},listItem:{fontSize:16,color:'#777',marginVertical:4}});","map":{"version":3,"names":["React","useState","useEffect","Text","View","TextInput","Button","StyleSheet","ScrollView","dictionaryData","jsx","_jsx","jsxs","_jsxs","Dictionary","_useState","_useState2","_slicedToArray","difficulty","setDifficulty","_useState3","word","_useState4","_useState5","searchTerm","setSearchTerm","_useState6","_useState7","searchResult","setSearchResult","_useState8","_useState9","displayedVerb","setDisplayedVerb","handleSearch","formMapping","tenseDescriptions","renderTenseDescription","tense","description","style","fontSize","marginTop","children","formatTense","split","map","charAt","toUpperCase","slice","join","formatGroupName","groupName","renderConjugationGroup","conjugations","tensesToExcludeForBeginners","styles","subHeader","Object","entries","_ref","_ref2","forms","includes","verbBlock","tenseHeader","listContainer","_ref3","_ref4","form","verb","listItem","allowedTensesForBeginner","renderConjugations","verbData","useage","_ref5","_ref6","_groupName$split","_groupName$split2","mainCategory","subCategory","_verbData$meta","lowercaseSearchTerm","toLowerCase","infinitiveEnglish","meta","infinitive_english","container","centered","header","input","placeholder","value","onChangeText","buttonContainer","title","onPress","color","boldText","create","flex","backgroundColor","alignItems","justifyContent","padding","fontWeight","textAlign","marginBottom","width","height","borderColor","borderWidth","borderRadius","paddingHorizontal","marginVertical"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/Dictionary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Text, View, TextInput, Button, StyleSheet, ScrollView } from 'react-native';\nimport dictionaryData from './data/spanishdictionary.json';\n\nconst Dictionary = () => {\nconst [difficulty, setDifficulty] = useState(null);\n\n\n\n\n const { word } = useState('');\n    const [searchTerm, setSearchTerm] = useState(word || '');\n    const [searchResult, setSearchResult] = useState('');\n    const [displayedVerb, setDisplayedVerb] = useState(null);\n\n\n    useEffect(() => {\n        if (word) {\n            handleSearch();\n        }\n        // eslint-disable-next-line\n    }, [word]);\n    const formMapping = {\n        \"form_1s\": \"Yo\",\n        \"form_2s\": \"Tu\",\n        \"form_3s\": \"Ella\",\n        \"form_1p\": \"Nosotros\",\n        \"form_2p\": \"Vosotros\",\n        \"form_3p\": \"Ellos\"\n    };\nconst tenseDescriptions = {\n    \"Preterite\": \"(simple past)\",\n    \"Present\": \"(present tense)\",\n    \"Future\": \"(future tense)\",\n   \"Imperfect\": \"(imperfect past)\",\n   \"Conditional\": \"(possibility)\",\n    \"Present Perfect\": \"(have)\",\n    \"Future Perfect\": \"(will have)\",\n    \"Past Perfect\": \"(had)\",\n    \"Conditional Perfect\": \"(would have)\",\n};\nconst renderTenseDescription = (tense) => {\n    const description = tenseDescriptions[tense];\nreturn description ? (\n    <Text style={{fontSize: 14, marginTop: 10}}>{description}</Text>\n) : null;\n\n};\nconst formatTense = (tense) => {\n    return tense.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n};\nfunction formatGroupName(groupName) {\n    return groupName.split('_')\n                    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(' ');\n}\n    const renderConjugationGroup = (groupName, conjugations) => {\n          const tensesToExcludeForBeginners = [\n        \"Conditional Perfect\", \n        \"Future Perfect\", \n        \"Past Perfect\", \n        \"Present Perfect\"\n    ];\n   return (\n\n     <View key={groupName}>\n    <Text style={styles.subHeader}>{formatGroupName(groupName)}</Text>\n    {Object.entries(conjugations).map(([tense, forms]) => {\n        // Exclude specific tenses for beginners\n        if (difficulty === \"beginner\" && tensesToExcludeForBeginners.includes(formatTense(tense))) {\n            return null;\n        }\n        return (\n            <View style={styles.verbBlock} key={tense}>\n                <Text style={styles.tenseHeader}>\n                    {formatTense(tense)}\n                    {renderTenseDescription(formatTense(tense))}\n                </Text>\n                <View style={styles.listContainer}>\n                    {Object.entries(forms).map(([form, verb]) => (\n                        <Text style={styles.listItem} key={form}>\n                            {formMapping[form]} {verb}\n                        </Text>\n                    ))}\n                </View>\n            </View>\n        );\n    })}\n</View>\n\n    );\n}\n\n\n\n\n\n\nconst allowedTensesForBeginner = {\n    \"indicative\": [\"present\", \"preterite\", \"imperfect\", \"conditional\", \"future\"]\n    // Add other main categories and their subcategories if needed in the future\n};\n const renderConjugations = (verbData) => {\n\n    \n\n    return (\n\n\n<View>\n    {Object.entries(verbData.useage).map(([groupName, conjugations]) => {\n        const [mainCategory, subCategory] = groupName.split(\"_\");\n        \n        // For beginners, check both main category and subcategory\n        if (difficulty === \"beginner\") {\n            if (!allowedTensesForBeginner[mainCategory] || \n                (subCategory && !allowedTensesForBeginner[mainCategory].includes(subCategory))) {\n                return null;  // Don't render disallowed tenses\n            }\n        }\n\n        return renderConjugationGroup(groupName, conjugations);\n    })}\n</View>\n    );\n}\n\nconst handleSearch = () => {\n    const lowercaseSearchTerm = searchTerm.toLowerCase();\n    const verbData = dictionaryData[lowercaseSearchTerm];\n    const infinitiveEnglish = verbData?.meta?.infinitive_english || \"no word found\";\n    setSearchResult(infinitiveEnglish);\n    setDisplayedVerb(verbData);\n};\n\n\n      return (\n        <ScrollView style={styles.container}>\n            <View style={styles.centered}>\n                <Text style={styles.header}>Verb Conjugation Dictionary</Text>\n\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Enter a word...\"\n                    value={searchTerm}\n                    onChangeText={setSearchTerm} \n                />\n                <View style={styles.buttonContainer}>\n                    <Button title=\"Submit\" onPress={handleSearch} color=\"#007AFF\" />\n                </View>\n\n                <Text style={styles.boldText}>{searchResult}</Text>\n\n                {displayedVerb && renderConjugations(displayedVerb)}\n            </View>\n        </ScrollView>\n    );\n}\n\nexport default Dictionary;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f5f5f5',\n    },\n    centered: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    header: {\n        fontSize: 26,\n        fontWeight: 'bold',\n        color: '#333',\n        textAlign: 'center',\n        marginBottom: 20,\n    },\n    input: {\n        width: 280,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 8,\n        backgroundColor: 'white',\n        marginBottom: 20,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n    buttonContainer: {\n        width: 200,\n        marginBottom: 20,\n    },\n    subHeader: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#555',\n        marginBottom: 10,\n    },\n    tenseHeader: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#666',\n        marginBottom: 5,\n    },\n    boldText: {\n        fontWeight: 'bold',\n        fontSize: 18,\n        color: '#444',\n        marginVertical: 10,\n    },\n    listItem: {\n        fontSize: 16,\n        color: '#777',\n        marginVertical: 4,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}