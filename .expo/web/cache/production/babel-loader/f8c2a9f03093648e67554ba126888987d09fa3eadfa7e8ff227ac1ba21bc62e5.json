{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var _excluded=[\"url\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import*as WebBrowser from'expo-web-browser';import invariant from'invariant';import Platform from\"react-native-web/dist/exports/Platform\";import{CodeChallengeMethod,ResponseType}from\"./AuthRequest.types\";import{AuthError}from\"./Errors\";import*as PKCE from\"./PKCE\";import*as QueryParams from\"./QueryParams\";import{TokenResponse}from\"./TokenRequest\";var _authLock=false;export var AuthRequest=function(){function AuthRequest(request){var _request$responseType,_request$state,_request$extraParams,_request$codeChalleng,_request$usePKCE;_classCallCheck(this,AuthRequest);this.url=null;this.responseType=(_request$responseType=request.responseType)!=null?_request$responseType:ResponseType.Code;this.clientId=request.clientId;this.redirectUri=request.redirectUri;this.scopes=request.scopes;this.clientSecret=request.clientSecret;this.prompt=request.prompt;this.state=(_request$state=request.state)!=null?_request$state:PKCE.generateRandom(10);this.extraParams=(_request$extraParams=request.extraParams)!=null?_request$extraParams:{};this.codeChallengeMethod=(_request$codeChalleng=request.codeChallengeMethod)!=null?_request$codeChalleng:CodeChallengeMethod.S256;this.usePKCE=(_request$usePKCE=request.usePKCE)!=null?_request$usePKCE:true;if(__DEV__){if(this.prompt&&this.extraParams.prompt){console.warn(`\\`AuthRequest\\` \\`extraParams.prompt\\` will be overwritten by \\`prompt\\`.`);}if(this.clientSecret&&this.extraParams.client_secret){console.warn(`\\`AuthRequest\\` \\`extraParams.client_secret\\` will be overwritten by \\`clientSecret\\`.`);}if(this.codeChallengeMethod&&this.extraParams.code_challenge_method){console.warn(`\\`AuthRequest\\` \\`extraParams.code_challenge_method\\` will be overwritten by \\`codeChallengeMethod\\`.`);}}invariant(this.codeChallengeMethod!==CodeChallengeMethod.Plain,`\\`AuthRequest\\` does not support \\`CodeChallengeMethod.Plain\\` as it's not secure.`);invariant(this.redirectUri,`\\`AuthRequest\\` requires a valid \\`redirectUri\\`. Ex: ${Platform.select({web:'https://yourwebsite.com/',default:'com.your.app:/oauthredirect'})}`);}_createClass(AuthRequest,[{key:\"getAuthRequestConfigAsync\",value:function(){var _getAuthRequestConfigAsync=_asyncToGenerator(function*(){if(this.usePKCE){yield this.ensureCodeIsSetupAsync();}return{responseType:this.responseType,clientId:this.clientId,redirectUri:this.redirectUri,scopes:this.scopes,clientSecret:this.clientSecret,codeChallenge:this.codeChallenge,codeChallengeMethod:this.codeChallengeMethod,prompt:this.prompt,state:this.state,extraParams:this.extraParams,usePKCE:this.usePKCE};});function getAuthRequestConfigAsync(){return _getAuthRequestConfigAsync.apply(this,arguments);}return getAuthRequestConfigAsync;}()},{key:\"promptAsync\",value:function(){var _promptAsync=_asyncToGenerator(function*(discovery){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var url=_ref.url,options=_objectWithoutProperties(_ref,_excluded);if(!url){if(!this.url){return this.promptAsync(discovery,_objectSpread(_objectSpread({},options),{},{url:yield this.makeAuthUrlAsync(discovery)}));}url=this.url;}invariant(url,'No authUrl provided to AuthSession.startAsync. An authUrl is required -- it points to the page where the user will be able to sign in.');var startUrl=url;var returnUrl=this.redirectUri;if(_authLock){if(__DEV__){console.warn('Attempted to call AuthSession.startAsync multiple times while already active. Only one AuthSession can be active at any given time.');}return{type:'locked'};}_authLock=true;var result;try{result=yield WebBrowser.openAuthSessionAsync(startUrl,returnUrl,options);}finally{_authLock=false;}if(result.type==='opened'){throw new Error('An unexpected error occurred');}if(result.type!=='success'){return{type:result.type};}return this.parseReturnUrl(result.url);});function promptAsync(_x){return _promptAsync.apply(this,arguments);}return promptAsync;}()},{key:\"parseReturnUrl\",value:function parseReturnUrl(url){var _QueryParams$getQuery=QueryParams.getQueryParams(url),params=_QueryParams$getQuery.params,errorCode=_QueryParams$getQuery.errorCode;var state=params.state,_params$error=params.error,error=_params$error===void 0?errorCode:_params$error;var parsedError=null;var authentication=null;if(state!==this.state){parsedError=new AuthError({error:'state_mismatch',error_description:'Cross-Site request verification failed. Cached state and returned state do not match.'});}else if(error){parsedError=new AuthError(_objectSpread({error:error},params));}if(params.access_token){authentication=TokenResponse.fromQueryParams(params);}return{type:parsedError?'error':'success',error:parsedError,url:url,params:params,authentication:authentication,errorCode:errorCode};}},{key:\"makeAuthUrlAsync\",value:function(){var _makeAuthUrlAsync=_asyncToGenerator(function*(discovery){var _request$scopes;var request=yield this.getAuthRequestConfigAsync();if(!request.state)throw new Error('Cannot make request URL without a valid `state` loaded');var params={};if(request.codeChallenge){params.code_challenge=request.codeChallenge;}for(var extra in request.extraParams){if(extra in request.extraParams){params[extra]=request.extraParams[extra];}}if(request.usePKCE&&request.codeChallengeMethod){params.code_challenge_method=request.codeChallengeMethod;}if(request.clientSecret){params.client_secret=request.clientSecret;}if(request.prompt){params.prompt=request.prompt;}params.redirect_uri=request.redirectUri;params.client_id=request.clientId;params.response_type=request.responseType;params.state=request.state;if((_request$scopes=request.scopes)!=null&&_request$scopes.length){params.scope=request.scopes.join(' ');}var query=QueryParams.buildQueryString(params);this.url=`${discovery.authorizationEndpoint}?${query}`;return this.url;});function makeAuthUrlAsync(_x2){return _makeAuthUrlAsync.apply(this,arguments);}return makeAuthUrlAsync;}()},{key:\"ensureCodeIsSetupAsync\",value:function(){var _ensureCodeIsSetupAsync=_asyncToGenerator(function*(){if(this.codeVerifier){return;}var _yield$PKCE$buildCode=yield PKCE.buildCodeAsync(),codeVerifier=_yield$PKCE$buildCode.codeVerifier,codeChallenge=_yield$PKCE$buildCode.codeChallenge;this.codeVerifier=codeVerifier;this.codeChallenge=codeChallenge;});function ensureCodeIsSetupAsync(){return _ensureCodeIsSetupAsync.apply(this,arguments);}return ensureCodeIsSetupAsync;}()}]);return AuthRequest;}();","map":{"version":3,"names":["WebBrowser","invariant","Platform","CodeChallengeMethod","ResponseType","AuthError","PKCE","QueryParams","TokenResponse","_authLock","AuthRequest","request","_request$responseType","_request$state","_request$extraParams","_request$codeChalleng","_request$usePKCE","_classCallCheck","url","responseType","Code","clientId","redirectUri","scopes","clientSecret","prompt","state","generateRandom","extraParams","codeChallengeMethod","S256","usePKCE","__DEV__","console","warn","client_secret","code_challenge_method","Plain","select","web","default","_createClass","key","value","_getAuthRequestConfigAsync","_asyncToGenerator","ensureCodeIsSetupAsync","codeChallenge","getAuthRequestConfigAsync","apply","arguments","_promptAsync","discovery","_ref","length","undefined","options","_objectWithoutProperties","_excluded","promptAsync","_objectSpread","makeAuthUrlAsync","startUrl","returnUrl","type","result","openAuthSessionAsync","Error","parseReturnUrl","_x","_QueryParams$getQuery","getQueryParams","params","errorCode","_params$error","error","parsedError","authentication","error_description","access_token","fromQueryParams","_makeAuthUrlAsync","_request$scopes","code_challenge","extra","redirect_uri","client_id","response_type","scope","join","query","buildQueryString","authorizationEndpoint","_x2","_ensureCodeIsSetupAsync","codeVerifier","_yield$PKCE$buildCode","buildCodeAsync"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/node_modules/expo-auth-session/src/AuthRequest.ts"],"sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport invariant from 'invariant';\nimport { Platform } from 'react-native';\n\nimport {\n  AuthRequestConfig,\n  AuthRequestPromptOptions,\n  CodeChallengeMethod,\n  ResponseType,\n  Prompt,\n} from './AuthRequest.types';\nimport { AuthSessionResult } from './AuthSession.types';\nimport { DiscoveryDocument } from './Discovery';\nimport { AuthError } from './Errors';\nimport * as PKCE from './PKCE';\nimport * as QueryParams from './QueryParams';\nimport { TokenResponse } from './TokenRequest';\n\nlet _authLock: boolean = false;\n\ntype AuthDiscoveryDocument = Pick<DiscoveryDocument, 'authorizationEndpoint'>;\n\n// @needsAudit @docsMissing\n/**\n * Used to manage an authorization request according to the OAuth spec: [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1).\n * You can use this class directly for more info around the authorization.\n *\n * **Common use-cases:**\n *\n * - Parse a URL returned from the authorization server with `parseReturnUrlAsync()`.\n * - Get the built authorization URL with `makeAuthUrlAsync()`.\n * - Get a loaded JSON representation of the auth request with crypto state loaded with `getAuthRequestConfigAsync()`.\n *\n * @example\n * ```ts\n * // Create a request.\n * const request = new AuthRequest({ ... });\n *\n * // Prompt for an auth code\n * const result = await request.promptAsync(discovery);\n *\n * // Get the URL to invoke\n * const url = await request.makeAuthUrlAsync(discovery);\n *\n * // Get the URL to invoke\n * const parsed = await request.parseReturnUrlAsync(\"<URL From Server>\");\n * ```\n */\nexport class AuthRequest implements Omit<AuthRequestConfig, 'state'> {\n  /**\n   * Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12).\n   */\n  public state: string;\n  public url: string | null = null;\n  public codeVerifier?: string;\n  public codeChallenge?: string;\n\n  readonly responseType: ResponseType | string;\n  readonly clientId: string;\n  readonly extraParams: Record<string, string>;\n  readonly usePKCE?: boolean;\n  readonly codeChallengeMethod: CodeChallengeMethod;\n  readonly redirectUri: string;\n  readonly scopes?: string[];\n  readonly clientSecret?: string;\n  readonly prompt?: Prompt;\n\n  constructor(request: AuthRequestConfig) {\n    this.responseType = request.responseType ?? ResponseType.Code;\n    this.clientId = request.clientId;\n    this.redirectUri = request.redirectUri;\n    this.scopes = request.scopes;\n    this.clientSecret = request.clientSecret;\n    this.prompt = request.prompt;\n    this.state = request.state ?? PKCE.generateRandom(10);\n    this.extraParams = request.extraParams ?? {};\n    this.codeChallengeMethod = request.codeChallengeMethod ?? CodeChallengeMethod.S256;\n    // PKCE defaults to true\n    this.usePKCE = request.usePKCE ?? true;\n\n    // Some warnings in development about potential confusing application code\n    if (__DEV__) {\n      if (this.prompt && this.extraParams.prompt) {\n        console.warn(`\\`AuthRequest\\` \\`extraParams.prompt\\` will be overwritten by \\`prompt\\`.`);\n      }\n      if (this.clientSecret && this.extraParams.client_secret) {\n        console.warn(\n          `\\`AuthRequest\\` \\`extraParams.client_secret\\` will be overwritten by \\`clientSecret\\`.`\n        );\n      }\n      if (this.codeChallengeMethod && this.extraParams.code_challenge_method) {\n        console.warn(\n          `\\`AuthRequest\\` \\`extraParams.code_challenge_method\\` will be overwritten by \\`codeChallengeMethod\\`.`\n        );\n      }\n    }\n\n    invariant(\n      this.codeChallengeMethod !== CodeChallengeMethod.Plain,\n      `\\`AuthRequest\\` does not support \\`CodeChallengeMethod.Plain\\` as it's not secure.`\n    );\n    invariant(\n      this.redirectUri,\n      `\\`AuthRequest\\` requires a valid \\`redirectUri\\`. Ex: ${Platform.select({\n        web: 'https://yourwebsite.com/',\n        default: 'com.your.app:/oauthredirect',\n      })}`\n    );\n  }\n\n  /**\n   * Load and return a valid auth request based on the input config.\n   */\n  async getAuthRequestConfigAsync(): Promise<AuthRequestConfig> {\n    if (this.usePKCE) {\n      await this.ensureCodeIsSetupAsync();\n    }\n\n    return {\n      responseType: this.responseType,\n      clientId: this.clientId,\n      redirectUri: this.redirectUri,\n      scopes: this.scopes,\n      clientSecret: this.clientSecret,\n      codeChallenge: this.codeChallenge,\n      codeChallengeMethod: this.codeChallengeMethod,\n      prompt: this.prompt,\n      state: this.state,\n      extraParams: this.extraParams,\n      usePKCE: this.usePKCE,\n    };\n  }\n\n  /**\n   * Prompt a user to authorize for a code.\n   *\n   * @param discovery\n   * @param promptOptions\n   */\n  async promptAsync(\n    discovery: AuthDiscoveryDocument,\n    { url, ...options }: AuthRequestPromptOptions = {}\n  ): Promise<AuthSessionResult> {\n    if (!url) {\n      if (!this.url) {\n        // Generate a new url\n        return this.promptAsync(discovery, {\n          ...options,\n          url: await this.makeAuthUrlAsync(discovery),\n        });\n      }\n      // Reuse the preloaded url\n      url = this.url;\n    }\n\n    // Prevent accidentally starting to an empty url\n    invariant(\n      url,\n      'No authUrl provided to AuthSession.startAsync. An authUrl is required -- it points to the page where the user will be able to sign in.'\n    );\n\n    const startUrl: string = url!;\n    const returnUrl: string = this.redirectUri;\n\n    // Prevent multiple sessions from running at the same time, WebBrowser doesn't\n    // support it this makes the behavior predictable.\n    if (_authLock) {\n      if (__DEV__) {\n        console.warn(\n          'Attempted to call AuthSession.startAsync multiple times while already active. Only one AuthSession can be active at any given time.'\n        );\n      }\n\n      return { type: 'locked' };\n    }\n\n    // About to start session, set lock\n    _authLock = true;\n\n    let result: WebBrowser.WebBrowserAuthSessionResult;\n    try {\n      result = await WebBrowser.openAuthSessionAsync(startUrl, returnUrl, options);\n    } finally {\n      _authLock = false;\n    }\n\n    if (result.type === 'opened') {\n      // This should never happen\n      throw new Error('An unexpected error occurred');\n    }\n    if (result.type !== 'success') {\n      return { type: result.type };\n    }\n\n    return this.parseReturnUrl(result.url);\n  }\n\n  parseReturnUrl(url: string): AuthSessionResult {\n    const { params, errorCode } = QueryParams.getQueryParams(url);\n    const { state, error = errorCode } = params;\n\n    let parsedError: AuthError | null = null;\n    let authentication: TokenResponse | null = null;\n    if (state !== this.state) {\n      // This is a non-standard error\n      parsedError = new AuthError({\n        error: 'state_mismatch',\n        error_description:\n          'Cross-Site request verification failed. Cached state and returned state do not match.',\n      });\n    } else if (error) {\n      parsedError = new AuthError({ error, ...params });\n    }\n    if (params.access_token) {\n      authentication = TokenResponse.fromQueryParams(params);\n    }\n\n    return {\n      type: parsedError ? 'error' : 'success',\n      error: parsedError,\n      url,\n      params,\n      authentication,\n\n      // Return errorCode for legacy\n      errorCode,\n    };\n  }\n\n  /**\n   * Create the URL for authorization.\n   *\n   * @param discovery\n   */\n  async makeAuthUrlAsync(discovery: AuthDiscoveryDocument): Promise<string> {\n    const request = await this.getAuthRequestConfigAsync();\n    if (!request.state) throw new Error('Cannot make request URL without a valid `state` loaded');\n\n    // Create a query string\n    const params: Record<string, string> = {};\n\n    if (request.codeChallenge) {\n      params.code_challenge = request.codeChallenge;\n    }\n\n    // copy over extra params\n    for (const extra in request.extraParams) {\n      if (extra in request.extraParams) {\n        params[extra] = request.extraParams[extra];\n      }\n    }\n\n    if (request.usePKCE && request.codeChallengeMethod) {\n      params.code_challenge_method = request.codeChallengeMethod;\n    }\n\n    if (request.clientSecret) {\n      params.client_secret = request.clientSecret;\n    }\n\n    if (request.prompt) {\n      params.prompt = request.prompt;\n    }\n\n    // These overwrite any extra params\n    params.redirect_uri = request.redirectUri;\n    params.client_id = request.clientId;\n    params.response_type = request.responseType!;\n    params.state = request.state;\n\n    if (request.scopes?.length) {\n      params.scope = request.scopes.join(' ');\n    }\n\n    const query = QueryParams.buildQueryString(params);\n    // Store the URL for later\n    this.url = `${discovery.authorizationEndpoint}?${query}`;\n    return this.url;\n  }\n\n  private async ensureCodeIsSetupAsync(): Promise<void> {\n    if (this.codeVerifier) {\n      return;\n    }\n\n    // This method needs to be resolved like all other native methods.\n    const { codeVerifier, codeChallenge } = await PKCE.buildCodeAsync();\n\n    this.codeVerifier = codeVerifier;\n    this.codeChallenge = codeChallenge;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}