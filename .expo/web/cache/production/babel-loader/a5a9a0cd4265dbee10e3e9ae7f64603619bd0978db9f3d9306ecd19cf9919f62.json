{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";var _window$document;import{Platform}from'expo-modules-core';import qs from'qs';var isDOMAvailable=Platform.OS==='web'&&typeof window!=='undefined'&&!!((_window$document=window.document)!=null&&_window$document.createElement)&&typeof URL!=='undefined';export function requestAsync(_x,_x2){return _requestAsync.apply(this,arguments);}function _requestAsync(){_requestAsync=_asyncToGenerator(function*(requestUrl,fetchRequest){var _fetchRequest$dataTyp;if(Platform.OS==='web'&&!isDOMAvailable){return;}var url=new URL(requestUrl);var request={method:fetchRequest.method,mode:'cors',headers:{}};var isJsonDataType=((_fetchRequest$dataTyp=fetchRequest.dataType)==null?void 0:_fetchRequest$dataTyp.toLowerCase())==='json';if(fetchRequest.headers){for(var i in fetchRequest.headers){if(i in fetchRequest.headers){request.headers[i]=fetchRequest.headers[i];}}}if(fetchRequest.body){var _fetchRequest$method;if(((_fetchRequest$method=fetchRequest.method)==null?void 0:_fetchRequest$method.toUpperCase())==='POST'){request.body=qs.stringify(fetchRequest.body);}else{for(var key of Object.keys(fetchRequest.body)){url.searchParams.append(key,fetchRequest.body[key]);}}}if(isJsonDataType&&!('Accept'in request.headers)){request.headers['Accept']='application/json, text/javascript; q=0.01';}var correctedUrl=url.toString().replace(/\\/$/,'');var response=yield fetch(correctedUrl,request);var contentType=response.headers.get('content-type');if(isJsonDataType||contentType!=null&&contentType.includes('application/json')){return response.json();}return response.text();});return _requestAsync.apply(this,arguments);}","map":{"version":3,"names":["Platform","qs","isDOMAvailable","OS","window","_window$document","document","createElement","URL","requestAsync","_x","_x2","_requestAsync","apply","arguments","_asyncToGenerator","requestUrl","fetchRequest","_fetchRequest$dataTyp","url","request","method","mode","headers","isJsonDataType","dataType","toLowerCase","i","body","_fetchRequest$method","toUpperCase","stringify","key","Object","keys","searchParams","append","correctedUrl","toString","replace","response","fetch","contentType","get","includes","json","text"],"sources":["/Users/nika/Documents/GitHub/AI_quiz_generatorold/node_modules/expo-auth-session/src/Fetch.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport qs from 'qs';\n\nexport type Headers = Record<string, string> & {\n  'Content-Type': string;\n  Authorization?: string;\n  Accept?: string;\n};\n\nexport type FetchRequest = {\n  headers?: Headers;\n  body?: Record<string, string>;\n  dataType?: string;\n  method?: string;\n};\n\n// TODO(Bacon): pending react-native-adapter publish after sdk 38\nconst isDOMAvailable =\n  Platform.OS === 'web' &&\n  typeof window !== 'undefined' &&\n  !!window.document?.createElement &&\n  typeof URL !== 'undefined';\n\nexport async function requestAsync<T>(requestUrl: string, fetchRequest: FetchRequest): Promise<T> {\n  if (Platform.OS === 'web' && !isDOMAvailable) {\n    // @ts-ignore\n    return;\n  }\n  const url = new URL(requestUrl);\n\n  const request: Omit<RequestInit, 'headers'> & { headers: HeadersInit } = {\n    method: fetchRequest.method,\n    mode: 'cors',\n    headers: {},\n  };\n\n  const isJsonDataType = fetchRequest.dataType?.toLowerCase() === 'json';\n\n  if (fetchRequest.headers) {\n    for (const i in fetchRequest.headers) {\n      if (i in fetchRequest.headers) {\n        request.headers[i] = fetchRequest.headers[i] as string;\n      }\n    }\n  }\n\n  if (fetchRequest.body) {\n    if (fetchRequest.method?.toUpperCase() === 'POST') {\n      request.body = qs.stringify(fetchRequest.body);\n    } else {\n      for (const key of Object.keys(fetchRequest.body)) {\n        url.searchParams.append(key, fetchRequest.body[key]);\n      }\n    }\n  }\n\n  if (isJsonDataType && !('Accept' in request.headers)) {\n    // NOTE: Github authentication will return XML if this includes the standard `*/*`\n    request.headers['Accept'] = 'application/json, text/javascript; q=0.01';\n  }\n\n  // Fix a problem with React Native `URL` causing a trailing slash to be added.\n  const correctedUrl = url.toString().replace(/\\/$/, '');\n\n  const response = await fetch(correctedUrl, request);\n\n  const contentType = response.headers.get('content-type');\n  if (isJsonDataType || contentType?.includes('application/json')) {\n    return response.json();\n  }\n  // @ts-ignore: Type 'string' is not assignable to type 'T'.\n  return response.text();\n}\n"],"mappings":"4FAAA,OAASA,QAAQ,KAAQ,mBAAmB,CAC5C,MAAO,CAAAC,EAAE,KAAM,IAAI,CAgBnB,GAAM,CAAAC,cAAc,CAClBF,QAAQ,CAACG,EAAE,GAAK,KAAK,EACrB,MAAO,CAAAC,MAAM,GAAK,WAAW,EAC7B,CAAC,GAAAC,gBAAA,CAACD,MAAM,CAACE,QAAQ,SAAfD,gBAAA,CAAiBE,aAAa,GAChC,MAAO,CAAAC,GAAG,GAAK,WAAW,CAE5B,eAAsB,CAAAC,YAAYA,CAAAC,EAAA,CAAAC,GAAA,SAAAC,aAAA,CAAAC,KAAA,MAAAC,SAAA,GAiDjC,SAAAF,cAAA,EAAAA,aAAA,CAAAG,iBAAA,CAjDM,UAA+BC,UAAkB,CAAEC,YAA0B,MAAAC,qBAAA,CAClF,GAAIlB,QAAQ,CAACG,EAAE,GAAK,KAAK,EAAI,CAACD,cAAc,CAAE,CAE5C,O,CAEF,GAAM,CAAAiB,GAAG,CAAG,GAAI,CAAAX,GAAG,CAACQ,UAAU,CAAC,CAE/B,GAAM,CAAAI,OAAO,CAA4D,CACvEC,MAAM,CAAEJ,YAAY,CAACI,MAAM,CAC3BC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,E,CACV,CAED,GAAM,CAAAC,cAAc,CAAG,EAAAN,qBAAA,CAAAD,YAAY,CAACQ,QAAQ,eAArBP,qBAAA,CAAuBQ,WAAW,EAAE,IAAK,MAAM,CAEtE,GAAIT,YAAY,CAACM,OAAO,CAAE,CACxB,IAAK,GAAM,CAAAI,CAAC,GAAI,CAAAV,YAAY,CAACM,OAAO,CAAE,CACpC,GAAII,CAAC,GAAI,CAAAV,YAAY,CAACM,OAAO,CAAE,CAC7BH,OAAO,CAACG,OAAO,CAACI,CAAC,CAAC,CAAGV,YAAY,CAACM,OAAO,CAACI,CAAC,CAAW,C,GAK5D,GAAIV,YAAY,CAACW,IAAI,CAAE,KAAAC,oBAAA,CACrB,GAAI,EAAAA,oBAAA,CAAAZ,YAAY,CAACI,MAAM,eAAnBQ,oBAAA,CAAqBC,WAAW,EAAE,IAAK,MAAM,CAAE,CACjDV,OAAO,CAACQ,IAAI,CAAG3B,EAAE,CAAC8B,SAAS,CAACd,YAAY,CAACW,IAAI,CAAC,C,CAC/C,IAAM,CACL,IAAK,GAAM,CAAAI,GAAG,GAAI,CAAAC,MAAM,CAACC,IAAI,CAACjB,YAAY,CAACW,IAAI,CAAC,CAAE,CAChDT,GAAG,CAACgB,YAAY,CAACC,MAAM,CAACJ,GAAG,CAAEf,YAAY,CAACW,IAAI,CAACI,GAAG,CAAC,CAAC,C,GAK1D,GAAIR,cAAc,EAAI,EAAE,QAAQ,EAAI,CAAAJ,OAAO,CAACG,OAAO,CAAC,CAAE,CAEpDH,OAAO,CAACG,OAAO,CAAC,QAAQ,CAAC,CAAG,2CAA2C,C,CAIzE,GAAM,CAAAc,YAAY,CAAGlB,GAAG,CAACmB,QAAQ,EAAE,CAACC,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAEtD,GAAM,CAAAC,QAAQ,MAAS,CAAAC,KAAK,CAACJ,YAAY,CAAEjB,OAAO,CAAC,CAEnD,GAAM,CAAAsB,WAAW,CAAGF,QAAQ,CAACjB,OAAO,CAACoB,GAAG,CAAC,cAAc,CAAC,CACxD,GAAInB,cAAc,EAAIkB,WAAW,QAAXA,WAAW,CAAEE,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC/D,MAAO,CAAAJ,QAAQ,CAACK,IAAI,EAAE,C,CAGxB,MAAO,CAAAL,QAAQ,CAACM,IAAI,EAAE,CACxB,CAAC,SAAAlC,aAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}