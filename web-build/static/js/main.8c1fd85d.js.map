{"version":3,"file":"static/js/main.8c1fd85d.js","mappings":"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","sources":["Dictionary.js","QuizComponent.js","Navbar.js","Saved.js","Content.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Text, View, TextInput, Button, StyleSheet, ScrollView } from 'react-native';\nimport dictionaryData from './data/spanishdictionary.json';\n\nconst Dictionary = () => {\nconst [difficulty, setDifficulty] = useState(null);\n\n\n\n\n const { word } = useState('');\n    const [searchTerm, setSearchTerm] = useState(word || '');\n    const [searchResult, setSearchResult] = useState('');\n    const [displayedVerb, setDisplayedVerb] = useState(null);\n\n\n    useEffect(() => {\n        if (word) {\n            handleSearch();\n        }\n        // eslint-disable-next-line\n    }, [word]);\n    const formMapping = {\n        \"form_1s\": \"Yo\",\n        \"form_2s\": \"Tu\",\n        \"form_3s\": \"Ella\",\n        \"form_1p\": \"Nosotros\",\n        \"form_2p\": \"Vosotros\",\n        \"form_3p\": \"Ellos\"\n    };\nconst tenseDescriptions = {\n    \"Preterite\": \"(simple past)\",\n    \"Present\": \"(present tense)\",\n    \"Future\": \"(future tense)\",\n   \"Imperfect\": \"(imperfect past)\",\n   \"Conditional\": \"(possibility)\",\n    \"Present Perfect\": \"(have)\",\n    \"Future Perfect\": \"(will have)\",\n    \"Past Perfect\": \"(had)\",\n    \"Conditional Perfect\": \"(would have)\",\n};\nconst renderTenseDescription = (tense) => {\n    const description = tenseDescriptions[tense];\nreturn description ? (\n    <Text style={{fontSize: 14, marginTop: 10}}>{description}</Text>\n) : null;\n\n};\nconst formatTense = (tense) => {\n    return tense.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n};\nfunction formatGroupName(groupName) {\n    return groupName.split('_')\n                    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n                    .join(' ');\n}\n    const renderConjugationGroup = (groupName, conjugations) => {\n          const tensesToExcludeForBeginners = [\n        \"Conditional Perfect\", \n        \"Future Perfect\", \n        \"Past Perfect\", \n        \"Present Perfect\"\n    ];\n   return (\n\n     <View key={groupName}>\n    <Text style={styles.subHeader}>{formatGroupName(groupName)}</Text>\n    {Object.entries(conjugations).map(([tense, forms]) => {\n        // Exclude specific tenses for beginners\n        if (difficulty === \"beginner\" && tensesToExcludeForBeginners.includes(formatTense(tense))) {\n            return null;\n        }\n        return (\n            <View style={styles.verbBlock} key={tense}>\n                <Text style={styles.tenseHeader}>\n                    {formatTense(tense)}\n                    {renderTenseDescription(formatTense(tense))}\n                </Text>\n                <View style={styles.listContainer}>\n                    {Object.entries(forms).map(([form, verb]) => (\n                        <Text style={styles.listItem} key={form}>\n                            {formMapping[form]} {verb}\n                        </Text>\n                    ))}\n                </View>\n            </View>\n        );\n    })}\n</View>\n\n    );\n}\n\n\n\n\n\n\nconst allowedTensesForBeginner = {\n    \"indicative\": [\"present\", \"preterite\", \"imperfect\", \"conditional\", \"future\"]\n    // Add other main categories and their subcategories if needed in the future\n};\n const renderConjugations = (verbData) => {\n\n    \n\n    return (\n\n\n<View>\n    {Object.entries(verbData.useage).map(([groupName, conjugations]) => {\n        const [mainCategory, subCategory] = groupName.split(\"_\");\n        \n        // For beginners, check both main category and subcategory\n        if (difficulty === \"beginner\") {\n            if (!allowedTensesForBeginner[mainCategory] || \n                (subCategory && !allowedTensesForBeginner[mainCategory].includes(subCategory))) {\n                return null;  // Don't render disallowed tenses\n            }\n        }\n\n        return renderConjugationGroup(groupName, conjugations);\n    })}\n</View>\n    );\n}\n\nconst handleSearch = () => {\n    const lowercaseSearchTerm = searchTerm.toLowerCase();\n    const verbData = dictionaryData[lowercaseSearchTerm];\n    const infinitiveEnglish = verbData?.meta?.infinitive_english || \"no word found\";\n    setSearchResult(infinitiveEnglish);\n    setDisplayedVerb(verbData);\n};\n\n\n      return (\n        <ScrollView style={styles.container}>\n            <View style={styles.centered}>\n                <Text style={styles.header}>Verb Conjugation Dictionary</Text>\n\n                <TextInput\n                    style={styles.input}\n                    placeholder=\"Enter a word...\"\n                    value={searchTerm}\n                    onChangeText={setSearchTerm} \n                />\n                <View style={styles.buttonContainer}>\n                    <Button title=\"Submit\" onPress={handleSearch} color=\"#007AFF\" />\n                </View>\n\n                <Text style={styles.boldText}>{searchResult}</Text>\n\n                {displayedVerb && renderConjugations(displayedVerb)}\n            </View>\n        </ScrollView>\n    );\n}\n\nexport default Dictionary;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#f5f5f5',\n    },\n    centered: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    header: {\n        fontSize: 26,\n        fontWeight: 'bold',\n        color: '#333',\n        textAlign: 'center',\n        marginBottom: 20,\n    },\n    input: {\n        width: 280,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 8,\n        backgroundColor: 'white',\n        marginBottom: 20,\n        paddingHorizontal: 10,\n        fontSize: 16,\n    },\n    buttonContainer: {\n        width: 200,\n        marginBottom: 20,\n    },\n    subHeader: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#555',\n        marginBottom: 10,\n    },\n    tenseHeader: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#666',\n        marginBottom: 5,\n    },\n    boldText: {\n        fontWeight: 'bold',\n        fontSize: 18,\n        color: '#444',\n        marginVertical: 10,\n    },\n    listItem: {\n        fontSize: 16,\n        color: '#777',\n        marginVertical: 4,\n    },\n});","import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Button, TextInput,  FlatList, TouchableOpacity  } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport spanishAdjectiveData from './data/adjectives-spanish.json'; // Import the data from the adjectives-spanish.js\nimport spanishAdverbData from './data/adverbs-spanish.json'; // Import the data from the adjectives-spanish.js\nimport spanishEmojiData from './data/emoji-spanish.json'; // Import the data from the adjectives-spanish.js\nimport spanishNounData from './data/nouns-spanish.json'; // Import the data from the adjectives-spanish.js\n\nimport spanishQuizData from './data/spanishquiz.json';\n\nconst quizOptions = [\n    { value: 'Select', label: 'Select' },\n    { value: 'Subjunctive', label: 'Subjunctive' },\n    { value: 'Conjugation', label: 'Conjugation' },\n    { value: 'Imperative', label: 'Imperative' },\n    { value: 'emoji', label: 'Emoji' },\n    { value: 'noun', label: 'Noun' },\n    { value: 'adjective', label: 'Adjective' },\n    { value: 'adverb', label: 'Adverb' }\n];\n\nconst QuizComponent = ({ name, email }) => {\n    const [correctAnswer, setCorrectAnswer] = useState(null);\n\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\n    const [showAnswersVisibility, setShowAnswersVisibility] = useState(false);\nconst [answerCorrectness, setAnswerCorrectness] = useState([]);\n const [correctSpanish] = useState(null);\nconst inputRefs = useRef([]);\nconst [answersChecked, setAnswersChecked] = useState(false);\nconst [userAnswers, setUserAnswers] = useState([]);\nuseEffect(() => {\n    setUserAnswers(formattedQuestions.map(() => \"\"));\n}, [formattedQuestions]);\nconst [showQuiz, setShowQuiz] = useState(false);\nconst [hasSelected, setHasSelected] = useState(false);\nconst [quizQuestion, setQuizQuestion] = useState(\"\");\nconst [quizAnswer, setQuizAnswer] = useState([]);     const [selectedOption, setSelectedOption] = useState('Select');\n     const setLanguage = \"spanish\";\n    const [loading, setLoading] = useState(false);\n    const [feedback, setFeedback] = useState({});\n    const [quizData, setQuizData] = useState(null);\n    const [showAnswers, setShowAnswers] = useState(false);\n  const [formattedQuestions, setFormattedQuestions] = useState([]);\n    const [userEmail, setUserEmail] = useState('example@email.com'); // Dummy for now\n    const [difficulty, setDifficulty] = useState('beginner'); // Dummy for now, you may want to change this\nconst [quizType, setQuizType] = useState('Subjunctive');\n\n\nconst handleStartQuiz = () => {\n    setShowAnswersVisibility(false);\nsetAnswersChecked(false);\n\n    if (!spanishQuizData[difficulty] || !spanishQuizData[difficulty][quizType]) {\n        alert(\"No quiz data available for the selected difficulty and type.\");\n        return;\n    }\n    \n    const availableSentences = spanishQuizData[difficulty][quizType];\n    if (availableSentences.length < 5) {\n        alert(\"Not enough sentences available for the selected difficulty and type.\");\n        return;\n    }\n    \n    const selectedSentences = [];\n    while (selectedSentences.length < 5) {\n        const randomIndex = Math.floor(Math.random() * availableSentences.length);\n        if (!selectedSentences.includes(availableSentences[randomIndex])) {\n            selectedSentences.push(availableSentences[randomIndex]);\n        }\n    }\n    \n    setFormattedQuestions(selectedSentences);\n    setAnswerCorrectness([]);\n};\n\n    useEffect(() => {\n        const fetchUserPreferences = async () => {\n            try {\n                if (!email) return; // Use email directly\n                const response = await fetch(`https://skeba.info/netlify/get-biography.php?email=${email}`);\n                const data = await response.json();\n                if (data) {\n        \n                    setDifficulty(data.difficulty || \"beginner\");\n                \n                    console.log(data.difficulty);\n                }\n            } catch (error) {\n                console.error('Error fetching user preferences:', error);\n            }\n        };\n\n        fetchUserPreferences();\n    }, [email]);\nconst generateQuizAdj = () => {\nconsole.log(selectedOption);\nlet dataGroup\nif (selectedOption === \"adjective\") { // Use '===' for strict equality checking\n    dataGroup = spanishAdjectiveData[difficulty];\n}\nif (selectedOption === \"adverb\") { // Use '===' for strict equality checking\n    dataGroup = spanishAdverbData[difficulty];\n}\nif (selectedOption === \"emoji\") { // Use '===' for strict equality checking\n    dataGroup = spanishEmojiData[difficulty];\n}\nif (selectedOption === \"noun\") { // Use '===' for strict equality checking\n    dataGroup = spanishNounData[difficulty];\n}\n    if (!dataGroup || dataGroup.length === 0) {\n        alert(\"No quiz data available for the selected difficulty and type.\");\n        return;\n    }\n\n  // Randomly select an object from the dataGroup\n    const randomDataIndex = Math.floor(Math.random() * dataGroup.length);\n    const data = dataGroup[randomDataIndex];\n\n    // Convert data to array of [spanish, english] pairs\n    const pairs = Object.entries(data);\n\n    // Randomly select a pair for the correct answer\n    const randomIndex = Math.floor(Math.random() * pairs.length);\n    const [correctSpanish, correctEnglish] = pairs[randomIndex];\n\n    // Remove the correct answer from the list\n    pairs.splice(randomIndex, 1);\n\n    // Randomly select 3 distractors\n    const distractors = [];\n    for (let i = 0; i < 3; i++) {\n        const distractorIndex = Math.floor(Math.random() * pairs.length);\n        distractors.push(pairs[distractorIndex][0]);\n        pairs.splice(distractorIndex, 1);\n    }\n\n    // Create an array with the correct answer and the distractors\n    const options = [correctSpanish, ...distractors];\n\n    // Shuffle the options\n    for (let i = options.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [options[i], options[j]] = [options[j], options[i]];\n    }\nconsole.log(\"correct\",correctEnglish);\nconsole.log(\"correct\",correctSpanish);\nconsole.log(options);\nsetCorrectAnswer(correctSpanish);\n    // Convert to constants\n    const newQuest = correctEnglish;\n    const newOptions = options;\nsetQuizQuestion(newQuest);\nsetQuizAnswer(newOptions);\nconsole.log(\"question\", setCorrectAnswer);\n   console.log(\"answer\",newOptions);\nsetShowQuiz(true);\n};  \nconst handleCheckAnswers = () => {\n    if (answersChecked) {\n        setAnswerCorrectness([]); // Clear the answer correctness array\n    } else {\n        const correctnessArray = formattedQuestions.map((question, index) => {\n            const userAnswer = (userAnswers[index] || \"\").toLowerCase();\n            const correctAnswer = (question.answer || \"\").toLowerCase();\n            return userAnswer === correctAnswer;\n        });\n        setAnswerCorrectness(correctnessArray);\n    }\n    setAnswersChecked(prevState => !prevState); // Toggle the answersChecked state\n};\n\nconst renderAdjectiveQuiz = () => {\n\n    if (!quizQuestion) return null;\nconsole.log(\"correctspanish\",correctSpanish);\n   const isCorrect = (option) => hasSelected && option === selectedAnswer && option === correctAnswer;\nconst isIncorrect = (option) => hasSelected && option === selectedAnswer && option !== correctAnswer;\n\n\n    return (\n        <View style={{ marginVertical: 20 }}>\n            <Text style={{ fontSize: 18, fontWeight: 'bold' }}>\n                {quizQuestion}\n            </Text>\n            <FlatList\n                data={quizAnswer}\n                renderItem={({ item }) => (\n                    <TouchableOpacity \n                        onPress={() => {\n                            setSelectedAnswer(item);\n                            setHasSelected(true);\n                                    console.log(\"Selected:\", item);\n        console.log(\"Correct:\", correctSpanish);\n                        }}\n                        style={{\n                            padding: 10,\n                            backgroundColor: isCorrect(item) ? 'green' : (isIncorrect(item) ? 'red' : 'transparent')\n                        }}\n                    >\n                        <Text style={{ fontSize: 16 }}>\n                            {item}\n                        </Text>\n                    </TouchableOpacity>\n                )}\n                keyExtractor={(item, index) => index.toString()}\n            />\n        </View>\n    );\n};\n\n\n\n    return (\n<View style={styles.container}>\n\n\n\n            <Text style={styles.header}>Quiz Options</Text>\n          <Picker\n    selectedValue={selectedOption}\n    onValueChange={(itemValue) => {\n        setSelectedOption(itemValue);\n        setQuizType(itemValue);\n                setFormattedQuestions([]); // Reset the formattedQuestions state when a new option is selected\n\n    }}\n    style={{ ...styles.picker, height: 50, width: 200, backgroundColor: '#f8f8f8' }}\n>\n    {quizOptions.map(option => (\n        <Picker.Item \n            key={option.value} \n            label={option.label} \n            value={option.value} \n            style={styles.pickerItem} \n        />\n    ))}\n</Picker>\n{(selectedOption === \"adjective\" || selectedOption === \"adverb\" || selectedOption === \"noun\" || selectedOption === \"emoji\") && (\n    <View>\n        <Button title=\"Generate Quiz\" onPress={generateQuizAdj} />\n        {showQuiz && renderAdjectiveQuiz()}\n    </View>\n)}\n            {(selectedOption === \"Conjugation\" || selectedOption === \"Imperative\" || selectedOption === \"Subjunctive\") && (\n         <Button title=\"Start Quiz\" onPress={handleStartQuiz} />\n\n\n            )}\n         \n\n\n   {formattedQuestions.map((question, index) => {\n                const [start, middle, end] = question.sentence.split(/[\\(\\)]/);\n                return (\n                    <View key={index} style={{ flexDirection: 'column', alignItems: 'flex-start', marginVertical: 5 }}>\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                            <Text>{start}</Text>\n                            <TextInput\n                                ref={el => inputRefs.current[index] = el}\n                                value={userAnswers[index] || \"\"} // Ensure value is never undefined or null\n                                onChangeText={(text) => {\n                                    const updatedAnswers = [...userAnswers];\n                                    updatedAnswers[index] = text;\n                                    setUserAnswers(updatedAnswers);\n                                }}\n                                style={{ \n                                    borderWidth: 1, \n                                    borderColor: 'gray', \n                                    paddingHorizontal: 5, \n                                    marginHorizontal: 5,\n                                    backgroundColor: answerCorrectness[index] === true ? 'green' : (answerCorrectness[index] === false ? 'red' : 'white')\n                                }}\n                                placeholder={middle}\n                            />\n                            <Text>{end}</Text>\n                        </View>\n                        {showAnswersVisibility && <Text style={{ marginTop: 5 }}>Answer: {question.answer.charAt(0).toUpperCase() + question.answer.slice(1)}</Text>}\n                    </View>\n                );\n            })}\n\n            {formattedQuestions.length > 0 && (\n                <View style={{flexDirection: 'row', justifyContent: 'space-between', marginTop: 10 }}>\n                    <View style={{ marginRight: 5, }}>\n                        <Button title={answersChecked ? \"Reset Answers\" : \"Check Answers\"} onPress={handleCheckAnswers} />\n                    </View>\n                    <Button title={showAnswersVisibility ? \"Hide Answers\" : \"Show Answers\"} onPress={() => setShowAnswersVisibility(prevState => !prevState)} />\n                </View>\n            )}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#f5f5f5',\n        alignItems: 'center',\n    },\n    header: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 20,\n    },\n    picker: {\n        width: 250,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        marginBottom: 20,\n        backgroundColor: '#f8f8f8',\n    },\n    pickerItem: {\n        fontSize: 18,\n    },\n    input: {\n        width: 200,\n        height: 40,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginBottom: 20,\n        fontSize: 16,\n    },\n    listItem: {\n        padding: 10,\n        marginVertical: 5,\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: '#ddd',\n    },\n    correctAnswer: {\n        backgroundColor: 'green',\n    },\n    incorrectAnswer: {\n        backgroundColor: 'red',\n    },\n    Button: {\n        backgroundColor: 'red',\n    },\n});\n\nexport default QuizComponent;\n","import React from 'react';\nimport { View, Text, StyleSheet, Platform, TouchableOpacity } from 'react-native';\n\nconst Navbar = ({ isUserLoggedIn, setActivePage, activePage }) => {\n    return (  \n   \n  <View style={styles.navbar}>\n  \n         \n                <View style={styles.links}>\n                    {['home', 'dictionary', 'saved', 'quiz'].map((page) => (\n                        <TouchableOpacity \n                            key={page}\n                            style={[\n                                styles.touchableLink,\n                                activePage === page && styles.activeLink\n                            ]}\n                            onPress={() => setActivePage(page)}\n                        >\n                            <Text style={styles.link}>\n                                {page.charAt(0).toUpperCase() + page.slice(1)}\n                            </Text>\n                        </TouchableOpacity>\n                    ))}\n                </View>\n      \n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    links: {\n        flexDirection: \"row\",\n     \n    },\n    touchableLink: {\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 25,\n        marginHorizontal: 5,\n        backgroundColor: 'rgba(255,255,255,0.1)',\n        ...Platform.select({\n            web: {\n                cursor: 'pointer',\n                transition: 'all 0.3s',\n                ':hover': {\n                    backgroundColor: 'rgba(255,255,255,0.2)',\n                }\n            },\n        }),\n    },\n    link: {\n        color: 'white',\n        fontSize: 16,\n        textDecorationLine: \"none\",\n    },\n    activeLink: {\n        borderColor: 'white',\n        borderWidth: 1,\n    },\n    navbar: {\n        height: 60,\n             width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#333',\n        borderRadius: 0,\n        ...Platform.select({\n            web: {\n           \n                boxShadow: '0px 3px 10px rgba(0,0,0,0.1)',\n            },\n        }),\n    },\n    navbarText: {\n        color: 'white',\n        fontSize: 18,\n    },\n});\n\nexport default Navbar;\n\n","//Saved.js\nimport React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Button} from 'react-native'; // Add missing components\n//import { useHistory } from 'react-router-dom';\n\n\nconst Saved = ({ name, email, onSelectWord }) => {\n    //const history = useHistory();\n \n    const [savedWords, setSavedWords] = useState([]);\n  const handleDeleteClick = async (index, event) => {\n        event.preventDefault();\n        const wordToDelete = savedWords[index];\n        \n        try {\n             console.log('starting');\n             console.log(wordToDelete);\n             console.log(email);\n            const response = await fetch('https://skeba.info/netlify/deleteWord.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_email: email,\n                    word: wordToDelete\n                })\n            });\nconst responseText = await response.text();\nconsole.log('Response Text:', responseText);\n\n// Now parse the logged text as JSON\nconst data = JSON.parse(responseText);\n          \n            if (data.success) {\n                // Remove the word from the savedWords state\n                setSavedWords(prevWords => prevWords.filter(word => word !== wordToDelete));\n            } else {\n                console.error('Error deleting word:', data.error);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n    const handleIconClick = (index, event) => {\n        event.preventDefault();\n        const word = savedWords[index];\n        onSelectWord(word);\n    };\n\n    useEffect(() => {\n        // Fetch the saved words from the database\n        const fetchSavedWords = async () => {\n            try {\n                const response = await fetch(`https://skeba.info/netlify/getSavedWords.php?user_email=${email}`);\n                const data = await response.json();\n                if (data && data.words) {\n                    setSavedWords(data.words);\n                }\n            } catch (error) {\n                console.error('Error fetching saved words:', error);\n            }\n        };\n\n        fetchSavedWords();\n    }, [email]);\n\n    return (\n        <View style={styles.container}>\n        <Text style={styles.header}>Your Saved Verbs</Text>\n        {savedWords.map((word, index) => (\n            <View key={index} style={styles.wordContainer}>\n                <Text style={styles.text}>{word}</Text>\n                <Text style={styles.iconQuestion} onPress={(e) => handleIconClick(index, e)}>\n                    search\n                </Text>\n                <Text style={styles.iconDelete} onPress={(e) => handleDeleteClick(index, e)}>\n                    delete\n                </Text>\n            </View>\n        ))}\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#f5f5f5',\n        alignItems: 'center',\n    },\n    header: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        color: '#333',\n        marginBottom: 20,\n    },\n    picker: {\n        width: 250,\n        height: 50,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        marginBottom: 20,\n        backgroundColor: '#f8f8f8',\n    },\n    pickerItem: {\n        fontSize: 18,\n    },\n    input: {\n        width: 200,\n        height: 40,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        marginBottom: 20,\n        fontSize: 16,\n    },\n    listItem: {\n        padding: 10,\n        marginVertical: 5,\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: '#ddd',\n    },\n    correctAnswer: {\n        backgroundColor: 'green',\n    },\n    incorrectAnswer: {\n        backgroundColor: 'red',\n    },\n});\n\nexport default Saved;\n\n\n","import React, { useState, useEffect } from 'react'; // Add missing hooks\nimport { Text, View, StyleSheet, Button, ScrollView} from 'react-native'; // Add missing components\nimport { Picker } from '@react-native-picker/picker';\nimport AsyncStorage from '@react-native-community/async-storage';\n\n\nfunction Content({ name, email, setActivePage}) {\n    console.log(\"Received email prop:\", email);\n\n    const [loading, setLoading] = useState(true);\n    const [language, setLanguage] = useState(null);\nconst [difficulty, setDifficulty] = useState(\"\"); // Use an empty string as the default value\n    const [quizcount, setquizcount] = useState(null);\n    useEffect(() => {\n  const getEmailFromStorage = async () => {\n    if (!email) {\n        const storedEmail = await AsyncStorage.getItem('userEmail');\n        console.log(\"Email from local storage:\", storedEmail);\n        if (storedEmail) {\n            email = storedEmail;  // Update the email from local storage\n        }\n    }\n};\n    \n    getEmailFromStorage();\n}, []);\n    useEffect(() => {\n        const fetchUserPreferences = async () => {\n            try {\n                console.log(\"Using email for API call:\", email);\n\n                if (!email) return; // Use email directly\n                const response = await fetch(`https://skeba.info/netlify/get-biography.php?email=${email}`);\n                const data = await response.json();\n                console.log(\"data:\", data);\n                if (data) {\n                    setLanguage(data.language || \"spanish\");\n                    setDifficulty(data.difficulty || \"beginner\");\n                    setquizcount(data.quiz_count || 0);\n                }\n            } catch (error) {\n                console.error('Error fetching user preferences:', error);\n            }\n        };\n\n        fetchUserPreferences();\n    }, [email]);\n\n    const saveBiographyAndPreferences = async (newDifficulty) => {\n     \n\n        try {\n            console.log(\"Saving preferences for email:\", email, newDifficulty);\n   console.log(\"New difficulty:\", newDifficulty);\n            const response = await fetch('https://skeba.info/netlify/save-biography.php', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, difficulty: newDifficulty })\n\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                if (data && data.message) {\n                    alert(data.message);\n                } else {\n                    alert('Unexpected response from the server.');\n                    console.error('Unexpected data:', data);\n                }\n            } else {\n                alert('Failed to save data.');\n                console.error('Response not OK:', response);\n            }\n        } catch (error) {\n            console.error('There was an error saving the data:', error);\n        }\n    };\n\n    return (\n        <ScrollView style={styles.container}>\n            <Text style={styles.header}>Welcome {name}!</Text>\n            \n            <Text style={styles.subHeader}>Select your difficulty level:</Text>\n            \n            <View style={styles.pickerContainer}>\n                <Picker\n                    selectedValue={difficulty || \"\"}\n                    style={styles.picker}\n                    onValueChange={(itemValue) => {\n                        setDifficulty(itemValue);\n                        console.log(\"Changed difficulty to:\", itemValue);\n\n                        saveBiographyAndPreferences(itemValue);\n                    }}\n                >\n                    <Picker.Item label=\"Beginner\" value=\"beginner\" />\n                    <Picker.Item label=\"Intermediate\" value=\"intermediate\" />\n                    <Picker.Item label=\"Advanced\" value=\"advanced\" />\n                </Picker>\n            </View>\n            \n            <View style={styles.buttonContainer}>\n                <Button title=\"Take a Quiz!\" onPress={() => setActivePage('quiz')} />\n            </View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#f5f5f5',\n    },\n    header: {\n        fontSize: 26,\n        fontWeight: 'bold',\n        color: '#333',\n        textAlign: 'center',\n        marginBottom: 20,\n    },\n    subHeader: {\n        fontSize: 18,\n        fontWeight: '600',\n        color: '#555',\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n    pickerContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20,\n    },\n    picker: {\n        height: 50,\n        width: 200,\n        borderColor: '#ccc',\n        borderWidth: 1,\n        borderRadius: 8,\n        backgroundColor: 'white',\n    },\n    buttonContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 200,\n        alignSelf: 'center',\n        marginTop: 20,\n    },\n});\n\nexport default Content;","//app.js\nimport * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { Alert, Button, StyleSheet, Text, View, Image, TextInput } from 'react-native';\nimport Dictionary from './Dictionary';  // Import the Dictionary component\nimport QuizComponent from './QuizComponent';  // Import the Dictionary component\nimport AsyncStorage from '@react-native-community/async-storage';\n\nimport Navbar from './Navbar';\nimport Saved from './Saved';\nimport Content from './Content';  // Import the Content component\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nexport default function App() {\n      const [selectedWord, setSelectedWord] = useState(null);\n    const [message, setMessage] = useState('');\nconst [loginMessage, setLoginMessage] = useState('');\nconst Stack = createStackNavigator();\nconst [activePage, setActivePage] = useState(\"home\");\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\nconst [registerUsername, setRegisterUsername] = useState('');\nconst [registerPassword, setRegisterPassword] = useState('');\nconst [registerEmail, setRegisterEmail] = useState('');\nconst [email, setEmail] = useState('');\n\nuseEffect(() => {\n    async function fetchUserEmail() {\n        const savedEmail = await AsyncStorage.getItem('userEmail');\n        if (savedEmail) {\n    console.log(\"Fetched email from AsyncStorage:\", savedEmail);\n    setEmail(savedEmail);\n    setIsLoggedIn(true);\n} else {\n    console.log(\"No email found in AsyncStorage\");\n}\n    }\n    \n    fetchUserEmail();\n}, []);\nconst handleRegister = async () => {\n    try {\n        let formData = new URLSearchParams();\n        formData.append('username', registerUsername);\n        formData.append('password', registerPassword);\n        formData.append('email', registerEmail);\n\n        let response = await fetch('https://skeba.info/applogin/register.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: formData.toString(),\n        });\n\n        let json = await response.json();\n        if (json.success) {\n            setMessage('Registration Successful! You can now log in.');\n            // Clear the registration fields\n            setRegisterUsername('');\n            setRegisterPassword('');\n            setRegisterEmail('');\n        } else {\n            setMessage('Registration Failed: ' + json.message);\n        }\n    } catch (error) {\n        console.error('Registration error:', error);\n        setMessage('An unexpected error occurred.');\n    }\n};\nconst logout = () => {\n    setIsLoggedIn(false);\n    setEmail(''); \n    AsyncStorage.removeItem('userEmail');\n};\n\nconst handleLogin = async () => {\n    try {\n        let formData = new URLSearchParams();\n        formData.append('email', email);\n        formData.append('password', password);\n\n\n       let response = await fetch('https://skeba.info/applogin/login.php', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData.toString(),\n});\n\nlet json = await response.json();\nconsole.log(\"API Response JSON:\", json);\n\n     if (json.success) {\n            console.log(\"Setting email from API response:\", json.email);\n\n    setIsLoggedIn(true);\n    setEmail(json.email);\n    AsyncStorage.setItem('userEmail', json.email);\n    setLoginMessage('Login Successful!');\n} else {\n            setLoginMessage('Login Failed: ' + json.message);\n        }\n    } catch (error) {\n        console.error('Login error:', error);\n        setLoginMessage('An unexpected error occurred during login.');\n    }\n};\n\nreturn (\n    <View style={styles.container}>\n        {isLoggedIn ? (\n            <View style={styles.loggedInContainer}>\n               \n                  \n                     \n\n     \n            <Navbar email={email} isUserLoggedIn={isLoggedIn} setActivePage={setActivePage} />\n\n           \n\n\n                    {activePage === \"home\" && <Content name={name} email={email} setActivePage={setActivePage} />}\n                    {activePage === \"dictionary\" && <Dictionary word={selectedWord} />}\n                    {activePage === \"saved\" && <Saved name={name} email={email} onSelectWord={setSelectedWord} />}\n                    {activePage === \"quiz\" && <QuizComponent name={name} email={email} />}\n                    <Button title=\"Log out\" onPress={logout} />\n           \n      \n\n\n                </View>\n\n          \n            ) : (\n                <View style={styles.formContainer}>\n                            <Image source={require('./data/spanishquiz.png')} style={styles.image} />\n\n                    <Text style={styles.header}>Login</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Email\" \n                        value={email}        // Updated value to email\n                        onChangeText={setEmail}  // Updated function to setEmail\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChangeText={setPassword}\n                        secureTextEntry={true}\n                    />\n                    <Button title=\"Login\" onPress={handleLogin} />\n<Text style={styles.messageText}>{loginMessage}</Text>  \n\n                    <Text style={[styles.header, styles.marginTop]}>Register</Text>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Register Email\"\n                        value={registerEmail}\n                        onChangeText={setRegisterEmail}\n                    />\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Register Password\"\n                        value={registerPassword}\n                        onChangeText={setRegisterPassword}\n                        secureTextEntry={true}\n                    />\n                    <Button title=\"Register\" onPress={handleRegister} />\n                    <Text style={styles.messageText}>{message}</Text>\n\n                </View>\n            )}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#f4f4f4\",\n        paddingBottom: 20,\n         paddingLeft: 20,\n         paddingRight: 20,\n width: '100%',\n    },\n    messageText: {\n    textAlign: 'center',\n    color: '#FF0000',  // red color for the message\n    marginBottom: 15,\n},\n       image: {\n        width: 300,\n        height: 200,\n        resizeMode: 'contain',\n        alignSelf: 'center',\n        marginBottom: 40,\n    },\n    loggedInContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n    },\n    formContainer: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n\n    input: {\n        padding: 10,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        marginBottom: 15,\n        backgroundColor: '#fff',\n    },\n    marginTop: {\n        marginTop: 40,\n    }\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [984], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_useState","useState","_useState2","_slicedToArray","difficulty","word","_useState4","_useState5","searchTerm","setSearchTerm","_useState6","_useState7","searchResult","setSearchResult","_useState8","_useState9","displayedVerb","setDisplayedVerb","useEffect","handleSearch","formMapping","tenseDescriptions","renderTenseDescription","tense","description","_jsx","Text","style","fontSize","marginTop","children","formatTense","split","map","charAt","toUpperCase","slice","join","formatGroupName","groupName","verbData","allowedTensesForBeginner","_verbData$meta","lowercaseSearchTerm","toLowerCase","dictionaryData","infinitiveEnglish","meta","infinitive_english","ScrollView","styles","container","_jsxs","View","centered","header","TextInput","input","placeholder","value","onChangeText","buttonContainer","Button","title","onPress","color","boldText","Object","entries","useage","_ref5","_ref6","conjugations","_groupName$split","_groupName$split2","mainCategory","subCategory","includes","tensesToExcludeForBeginners","subHeader","_ref","_ref2","forms","verbBlock","tenseHeader","listContainer","_ref3","_ref4","form","verb","listItem","renderConjugationGroup","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontWeight","textAlign","marginBottom","width","height","borderColor","borderWidth","borderRadius","paddingHorizontal","marginVertical","quizOptions","label","picker","pickerItem","correctAnswer","incorrectAnswer","name","email","setCorrectAnswer","_useState3","selectedAnswer","setSelectedAnswer","showAnswersVisibility","setShowAnswersVisibility","answerCorrectness","setAnswerCorrectness","correctSpanish","inputRefs","useRef","_useState11","_useState12","answersChecked","setAnswersChecked","_useState13","_useState14","userAnswers","setUserAnswers","formattedQuestions","_useState15","_useState16","showQuiz","setShowQuiz","_useState17","_useState18","hasSelected","setHasSelected","_useState19","_useState20","quizQuestion","setQuizQuestion","_useState21","_useState22","quizAnswer","setQuizAnswer","_useState23","_useState24","selectedOption","setSelectedOption","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","setFormattedQuestions","_useState35","_useState36","_useState37","_useState38","setDifficulty","_useState39","_useState40","quizType","setQuizType","fetchUserPreferences","_asyncToGenerator","response","fetch","data","json","console","log","error","apply","arguments","Picker","selectedValue","onValueChange","itemValue","_objectSpread","option","Item","dataGroup","spanishAdjectiveData","spanishAdverbData","spanishEmojiData","spanishNounData","length","Math","floor","random","pairs","randomIndex","_pairs$randomIndex","correctEnglish","splice","distractors","i","distractorIndex","push","options","concat","j","newOptions","alert","isIncorrect","FlatList","renderItem","item","TouchableOpacity","keyExtractor","index","toString","renderAdjectiveQuiz","spanishQuizData","availableSentences","selectedSentences","question","_question$sentence$sp","sentence","_question$sentence$sp2","start","middle","end","flexDirection","ref","el","current","text","updatedAnswers","_toConsumableArray","marginHorizontal","answer","marginRight","correctnessArray","prevState","links","touchableLink","paddingVertical","Platform","select","web","cursor","transition","link","textDecorationLine","activeLink","navbar","boxShadow","navbarText","isUserLoggedIn","setActivePage","activePage","page","onSelectWord","savedWords","setSavedWords","handleDeleteClick","event","preventDefault","wordToDelete","method","headers","body","JSON","stringify","user_email","responseText","parse","success","prevWords","filter","_x","_x2","fetchSavedWords","words","wordContainer","iconQuestion","e","handleIconClick","iconDelete","pickerContainer","alignSelf","setLanguage","setquizcount","getEmailFromStorage","storedEmail","AsyncStorage","getItem","language","quiz_count","saveBiographyAndPreferences","newDifficulty","ok","message","App","selectedWord","setSelectedWord","setMessage","loginMessage","setLoginMessage","createStackNavigator","_useState10","password","setPassword","isLoggedIn","setIsLoggedIn","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","registerEmail","setRegisterEmail","setEmail","_fetchUserEmail","savedEmail","fetchUserEmail","handleRegister","formData","URLSearchParams","append","handleLogin","setItem","loggedInContainer","Navbar","Content","Dictionary","Saved","QuizComponent","removeItem","formContainer","Image","source","require","image","secureTextEntry","messageText","paddingBottom","paddingLeft","paddingRight","resizeMode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","key","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}